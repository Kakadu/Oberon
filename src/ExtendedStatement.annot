"ExtendedStatement.ml" 10 179 191 "ExtendedStatement.ml" 10 179 195
type(
  < case : ([> `Case of
                 'b *
                 ([< `Atom of 'c | `Interval of 'c * 'c ] list * 'a list)
                 list * 'a list
             | `For of 'd * 'b * 'b * 'c option * 'a list ]
            as 'a) ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g M.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g M.t; .. > ->
  ('d -> 'e M.t) ->
  ('c -> 'f M.t) ->
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
ident(
  def gmap "ExtendedStatement.ml" 10 179 183 "ExtendedStatement.ml" 40 1250 1255
)
"ExtendedStatement.ml" 10 179 196 "ExtendedStatement.ml" 10 179 197
type(
  < case : 'a ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g M.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g M.t; .. >
  as 'h
)
ident(
  def t "ExtendedStatement.ml" 10 179 198 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 10 179 198 "ExtendedStatement.ml" 10 179 201
type(
  'd -> 'e M.t
)
ident(
  def ref "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
type(
  'c -> 'f M.t
)
ident(
  def cexpr "ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 10 179 212
type(
  'b -> 'e M.t
)
ident(
  def expr "ExtendedStatement.ml" 10 179 213 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 10 179 213 "ExtendedStatement.ml" 10 179 216
type(
  ('a -> 'g M.t) -> 'a -> 'g M.t
)
ident(
  def ext "ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 10 179 221
type(
  'a
)
ident(
  def stmt "ExtendedStatement.ml" 11 224 230 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 11 224 234 "ExtendedStatement.ml" 11 224 238
type(
  'a -> 'g M.t
)
ident(
  def self "ExtendedStatement.ml" 12 270 276 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 11 224 241 "ExtendedStatement.ml" 11 224 245
type(
  'h ->
  ('d -> 'e M.t) ->
  ('c -> 'f M.t) ->
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
ident(
  int_ref gmap "ExtendedStatement.ml" 10 179 191 "ExtendedStatement.ml" 10 179 195
)
"ExtendedStatement.ml" 11 224 246 "ExtendedStatement.ml" 11 224 247
type(
  'h
)
ident(
  int_ref t "ExtendedStatement.ml" 10 179 196 "ExtendedStatement.ml" 10 179 197
)
"ExtendedStatement.ml" 11 224 248 "ExtendedStatement.ml" 11 224 251
type(
  'd -> 'e M.t
)
ident(
  int_ref ref "ExtendedStatement.ml" 10 179 198 "ExtendedStatement.ml" 10 179 201
)
"ExtendedStatement.ml" 11 224 252 "ExtendedStatement.ml" 11 224 257
type(
  'c -> 'f M.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
)
"ExtendedStatement.ml" 11 224 258 "ExtendedStatement.ml" 11 224 262
type(
  'b -> 'e M.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 10 179 212
)
"ExtendedStatement.ml" 11 224 263 "ExtendedStatement.ml" 11 224 266
type(
  ('a -> 'g M.t) -> 'a -> 'g M.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 10 179 213 "ExtendedStatement.ml" 10 179 216
)
"ExtendedStatement.ml" 11 224 241 "ExtendedStatement.ml" 11 224 266
call(
  stack
)
type(
  'a -> 'g M.t
)
"ExtendedStatement.ml" 12 270 282 "ExtendedStatement.ml" 12 270 286
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 10 179 221
)
"ExtendedStatement.ml" 13 292 306 "ExtendedStatement.ml" 13 292 307
type(
  'd
)
ident(
  def i "ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
)
"ExtendedStatement.ml" 13 292 309 "ExtendedStatement.ml" 13 292 310
type(
  'b
)
ident(
  def l "ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
)
"ExtendedStatement.ml" 13 292 312 "ExtendedStatement.ml" 13 292 313
type(
  'b
)
ident(
  def u "ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
)
"ExtendedStatement.ml" 13 292 315 "ExtendedStatement.ml" 13 292 316
type(
  'c option
)
ident(
  def s "ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
)
"ExtendedStatement.ml" 13 292 318 "ExtendedStatement.ml" 13 292 319
type(
  'a list
)
ident(
  def b "ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
)
"ExtendedStatement.ml" 13 292 306 "ExtendedStatement.ml" 13 292 319
type(
  'd * 'b * 'b * 'c option * 'a list
)
"ExtendedStatement.ml" 13 292 300 "ExtendedStatement.ml" 13 292 320
type(
  'a
)
"ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 14 325 340
type(
  'f option M.t * ('e list * 'g list) M.t ->
  ('f option * ('e list * 'g list)) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 15 343 362 "ExtendedStatement.ml" 15 343 363
type(
  'c option
)
ident(
  int_ref s "ExtendedStatement.ml" 13 292 315 "ExtendedStatement.ml" 13 292 316
)
"ExtendedStatement.ml" 15 343 369 "ExtendedStatement.ml" 15 343 373
type(
  'c option
)
"ExtendedStatement.ml" 15 343 377 "ExtendedStatement.ml" 15 343 383
type(
  'f option -> 'f option M.t
)
ident(
  ext_ref M.return
)
"ExtendedStatement.ml" 15 343 384 "ExtendedStatement.ml" 15 343 388
type(
  'f option
)
"ExtendedStatement.ml" 15 343 377 "ExtendedStatement.ml" 15 343 388
call(
  stack
)
type(
  'f option M.t
)
"ExtendedStatement.ml" 15 343 396 "ExtendedStatement.ml" 15 343 397
type(
  'c
)
ident(
  def x "ExtendedStatement.ml" 15 343 401 "ExtendedStatement.ml" 15 343 429
)
"ExtendedStatement.ml" 15 343 391 "ExtendedStatement.ml" 15 343 397
type(
  'c option
)
"ExtendedStatement.ml" 15 343 401 "ExtendedStatement.ml" 15 343 406
type(
  'c -> 'f M.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
)
"ExtendedStatement.ml" 15 343 407 "ExtendedStatement.ml" 15 343 408
type(
  'c
)
ident(
  int_ref x "ExtendedStatement.ml" 15 343 396 "ExtendedStatement.ml" 15 343 397
)
"ExtendedStatement.ml" 15 343 401 "ExtendedStatement.ml" 15 343 408
call(
  stack
)
type(
  'f M.t
)
"ExtendedStatement.ml" 15 343 417 "ExtendedStatement.ml" 15 343 418
type(
  'f
)
ident(
  def x "ExtendedStatement.ml" 15 343 422 "ExtendedStatement.ml" 15 343 428
)
"ExtendedStatement.ml" 15 343 427 "ExtendedStatement.ml" 15 343 428
type(
  'f
)
ident(
  int_ref x "ExtendedStatement.ml" 15 343 417 "ExtendedStatement.ml" 15 343 418
)
"ExtendedStatement.ml" 15 343 422 "ExtendedStatement.ml" 15 343 428
type(
  'f option
)
"ExtendedStatement.ml" 15 343 412 "ExtendedStatement.ml" 15 343 429
type(
  'f -> 'f option
)
"ExtendedStatement.ml" 15 343 401 "ExtendedStatement.ml" 15 343 429
call(
  stack
)
type(
  'f option M.t
)
type(
  'f M.t -> ('f -> 'f option) -> 'f option M.t
)
ident(
  ext_ref M.( >= )
)
"ExtendedStatement.ml" 15 343 355 "ExtendedStatement.ml" 15 343 430
type(
  'f option M.t
)
"ExtendedStatement.ml" 16 432 444 "ExtendedStatement.ml" 16 432 449
type(
  'e list M.t * 'g list M.t -> ('e list * 'g list) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 17 452 466 "ExtendedStatement.ml" 17 452 470
type(
  'e M.t list -> 'e list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 17 452 472 "ExtendedStatement.ml" 17 452 475
type(
  'd -> 'e M.t
)
ident(
  int_ref ref "ExtendedStatement.ml" 10 179 198 "ExtendedStatement.ml" 10 179 201
)
"ExtendedStatement.ml" 17 452 476 "ExtendedStatement.ml" 17 452 477
type(
  'd
)
ident(
  int_ref i "ExtendedStatement.ml" 13 292 306 "ExtendedStatement.ml" 13 292 307
)
"ExtendedStatement.ml" 17 452 472 "ExtendedStatement.ml" 17 452 477
call(
  stack
)
type(
  'e M.t
)
"ExtendedStatement.ml" 17 452 479 "ExtendedStatement.ml" 17 452 483
type(
  'b -> 'e M.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 10 179 212
)
"ExtendedStatement.ml" 17 452 484 "ExtendedStatement.ml" 17 452 485
type(
  'b
)
ident(
  int_ref l "ExtendedStatement.ml" 13 292 309 "ExtendedStatement.ml" 13 292 310
)
"ExtendedStatement.ml" 17 452 479 "ExtendedStatement.ml" 17 452 485
call(
  stack
)
type(
  'e M.t
)
"ExtendedStatement.ml" 17 452 487 "ExtendedStatement.ml" 17 452 491
type(
  'b -> 'e M.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 10 179 212
)
"ExtendedStatement.ml" 17 452 492 "ExtendedStatement.ml" 17 452 493
type(
  'b
)
ident(
  int_ref u "ExtendedStatement.ml" 13 292 312 "ExtendedStatement.ml" 13 292 313
)
"ExtendedStatement.ml" 17 452 487 "ExtendedStatement.ml" 17 452 493
call(
  stack
)
type(
  'e M.t
)
"ExtendedStatement.ml" 17 452 471 "ExtendedStatement.ml" 17 452 494
type(
  'e M.t list
)
type(
  'e M.t list
)
type(
  'e M.t list
)
type(
  'e M.t list
)
"ExtendedStatement.ml" 17 452 466 "ExtendedStatement.ml" 17 452 494
call(
  stack
)
type(
  'e list M.t
)
"ExtendedStatement.ml" 18 496 510 "ExtendedStatement.ml" 18 496 514
type(
  'g M.t list -> 'g list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 18 496 516 "ExtendedStatement.ml" 18 496 519
type(
  ('a -> 'g M.t) -> 'a list -> 'g M.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 18 496 520 "ExtendedStatement.ml" 18 496 524
type(
  'a -> 'g M.t
)
ident(
  int_ref self "ExtendedStatement.ml" 11 224 234 "ExtendedStatement.ml" 11 224 238
)
"ExtendedStatement.ml" 18 496 525 "ExtendedStatement.ml" 18 496 526
type(
  'a list
)
ident(
  int_ref b "ExtendedStatement.ml" 13 292 318 "ExtendedStatement.ml" 13 292 319
)
"ExtendedStatement.ml" 18 496 515 "ExtendedStatement.ml" 18 496 527
call(
  stack
)
type(
  'g M.t list
)
"ExtendedStatement.ml" 18 496 510 "ExtendedStatement.ml" 18 496 527
call(
  stack
)
type(
  'g list M.t
)
"ExtendedStatement.ml" 16 432 450 "ExtendedStatement.ml" 19 528 541
type(
  'e list M.t * 'g list M.t
)
"ExtendedStatement.ml" 16 432 444 "ExtendedStatement.ml" 19 528 541
call(
  stack
)
type(
  ('e list * 'g list) M.t
)
"ExtendedStatement.ml" 14 325 341 "ExtendedStatement.ml" 20 542 553
type(
  'f option M.t * ('e list * 'g list) M.t
)
"ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 553
call(
  stack
)
type(
  ('f option * ('e list * 'g list)) M.t
)
"ExtendedStatement.ml" 20 542 564 "ExtendedStatement.ml" 20 542 565
type(
  'f option
)
ident(
  def s "ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
)
"ExtendedStatement.ml" 20 542 569 "ExtendedStatement.ml" 20 542 570
type(
  'e
)
ident(
  def i "ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
)
"ExtendedStatement.ml" 20 542 572 "ExtendedStatement.ml" 20 542 573
type(
  'e
)
ident(
  def l "ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
)
"ExtendedStatement.ml" 20 542 575 "ExtendedStatement.ml" 20 542 576
type(
  'e
)
ident(
  def u "ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
)
"ExtendedStatement.ml" 20 542 568 "ExtendedStatement.ml" 20 542 577
type(
  'e list
)
type(
  'e list
)
type(
  'e list
)
type(
  'e list
)
"ExtendedStatement.ml" 20 542 579 "ExtendedStatement.ml" 20 542 580
type(
  'g list
)
ident(
  def b "ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
)
"ExtendedStatement.ml" 20 542 568 "ExtendedStatement.ml" 20 542 580
type(
  'e list * 'g list
)
"ExtendedStatement.ml" 20 542 564 "ExtendedStatement.ml" 20 542 581
type(
  'f option * ('e list * 'g list)
)
"ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 587
type(
  'h
)
ident(
  int_ref t "ExtendedStatement.ml" 10 179 196 "ExtendedStatement.ml" 10 179 197
)
"ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 592
call(
  tail
)
type(
  'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g M.t
)
"ExtendedStatement.ml" 20 542 593 "ExtendedStatement.ml" 20 542 597
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 10 179 221
)
"ExtendedStatement.ml" 20 542 598 "ExtendedStatement.ml" 20 542 599
type(
  'e
)
ident(
  int_ref i "ExtendedStatement.ml" 20 542 569 "ExtendedStatement.ml" 20 542 570
)
"ExtendedStatement.ml" 20 542 600 "ExtendedStatement.ml" 20 542 601
type(
  'e
)
ident(
  int_ref l "ExtendedStatement.ml" 20 542 572 "ExtendedStatement.ml" 20 542 573
)
"ExtendedStatement.ml" 20 542 602 "ExtendedStatement.ml" 20 542 603
type(
  'e
)
ident(
  int_ref u "ExtendedStatement.ml" 20 542 575 "ExtendedStatement.ml" 20 542 576
)
"ExtendedStatement.ml" 20 542 604 "ExtendedStatement.ml" 20 542 605
type(
  'f option
)
ident(
  int_ref s "ExtendedStatement.ml" 20 542 564 "ExtendedStatement.ml" 20 542 565
)
"ExtendedStatement.ml" 20 542 606 "ExtendedStatement.ml" 20 542 607
type(
  'g list
)
ident(
  int_ref b "ExtendedStatement.ml" 20 542 579 "ExtendedStatement.ml" 20 542 580
)
"ExtendedStatement.ml" 20 542 586 "ExtendedStatement.ml" 20 542 607
type(
  'g M.t
)
"ExtendedStatement.ml" 20 542 558 "ExtendedStatement.ml" 20 542 608
type(
  'f option * ('e list * 'g list) -> 'g M.t
)
"ExtendedStatement.ml" 14 325 335 "ExtendedStatement.ml" 20 542 608
call(
  tail
)
type(
  'g M.t
)
type(
  ('f option * ('e list * 'g list)) M.t ->
  ('f option * ('e list * 'g list) -> 'g M.t) -> 'g M.t
)
ident(
  ext_ref M.( >>= )
)
"ExtendedStatement.ml" 21 609 624 "ExtendedStatement.ml" 21 609 625
type(
  'b
)
ident(
  def e "ExtendedStatement.ml" 22 637 647 "ExtendedStatement.ml" 38 1171 1225
)
"ExtendedStatement.ml" 21 609 627 "ExtendedStatement.ml" 21 609 628
type(
  (([< `Atom of 'c | `Interval of 'c * 'c ] as 'i) list * 'a list) list
)
ident(
  def b "ExtendedStatement.ml" 22 637 647 "ExtendedStatement.ml" 38 1171 1225
)
"ExtendedStatement.ml" 21 609 630 "ExtendedStatement.ml" 21 609 631
type(
  'a list
)
ident(
  def s "ExtendedStatement.ml" 22 637 647 "ExtendedStatement.ml" 38 1171 1225
)
"ExtendedStatement.ml" 21 609 624 "ExtendedStatement.ml" 21 609 631
type(
  'b * ('i list * 'a list) list * 'a list
)
"ExtendedStatement.ml" 21 609 617 "ExtendedStatement.ml" 21 609 632
type(
  'a
)
"ExtendedStatement.ml" 22 637 651 "ExtendedStatement.ml" 22 637 660
type(
  [< `Atom of 'c | `Interval of 'c * 'c ] list ->
  [> `Atom of 'f | `Interval of 'f * 'f ] list M.t
)
ident(
  def condition "ExtendedStatement.ml" 33 993 1003 "ExtendedStatement.ml" 38 1171 1225
)
"ExtendedStatement.ml" 22 637 661 "ExtendedStatement.ml" 22 637 662
type(
  ([< `Atom of 'c | `Interval of 'c * 'c ] as 'j) list
)
ident(
  def c "ExtendedStatement.ml" 23 665 677 "ExtendedStatement.ml" 31 966 979
)
"ExtendedStatement.ml" 23 665 677 "ExtendedStatement.ml" 23 665 681
type(
  ([> `Atom of 'f | `Interval of 'f * 'f ] as 'k) M.t list -> 'k list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 24 684 698 "ExtendedStatement.ml" 24 684 701
type(
  ('j -> 'k M.t) -> 'j list -> 'k M.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 26 729 754 "ExtendedStatement.ml" 26 729 755
type(
  'c
)
ident(
  def x "ExtendedStatement.ml" 26 729 759 "ExtendedStatement.ml" 26 729 788
)
"ExtendedStatement.ml" 26 729 748 "ExtendedStatement.ml" 26 729 755
type(
  'j
)
"ExtendedStatement.ml" 26 729 759 "ExtendedStatement.ml" 26 729 764
type(
  'c -> 'f M.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
)
"ExtendedStatement.ml" 26 729 765 "ExtendedStatement.ml" 26 729 766
type(
  'c
)
ident(
  int_ref x "ExtendedStatement.ml" 26 729 754 "ExtendedStatement.ml" 26 729 755
)
"ExtendedStatement.ml" 26 729 759 "ExtendedStatement.ml" 26 729 766
call(
  stack
)
type(
  'f M.t
)
"ExtendedStatement.ml" 26 729 775 "ExtendedStatement.ml" 26 729 776
type(
  'f
)
ident(
  def x "ExtendedStatement.ml" 26 729 780 "ExtendedStatement.ml" 26 729 787
)
"ExtendedStatement.ml" 26 729 786 "ExtendedStatement.ml" 26 729 787
type(
  'f
)
ident(
  int_ref x "ExtendedStatement.ml" 26 729 775 "ExtendedStatement.ml" 26 729 776
)
"ExtendedStatement.ml" 26 729 780 "ExtendedStatement.ml" 26 729 787
type(
  'k
)
"ExtendedStatement.ml" 26 729 770 "ExtendedStatement.ml" 26 729 788
type(
  'f -> 'k
)
"ExtendedStatement.ml" 26 729 759 "ExtendedStatement.ml" 26 729 788
call(
  tail
)
type(
  'k M.t
)
type(
  'f M.t -> ('f -> 'k) -> 'k M.t
)
ident(
  ext_ref M.( >= )
)
"ExtendedStatement.ml" 27 790 820 "ExtendedStatement.ml" 27 790 821
type(
  'c
)
ident(
  def x "ExtendedStatement.ml" 27 790 829 "ExtendedStatement.ml" 28 857 928
)
"ExtendedStatement.ml" 27 790 823 "ExtendedStatement.ml" 27 790 824
type(
  'c
)
ident(
  def y "ExtendedStatement.ml" 27 790 829 "ExtendedStatement.ml" 28 857 928
)
"ExtendedStatement.ml" 27 790 820 "ExtendedStatement.ml" 27 790 824
type(
  'c * 'c
)
"ExtendedStatement.ml" 27 790 809 "ExtendedStatement.ml" 27 790 825
type(
  'j
)
"ExtendedStatement.ml" 27 790 829 "ExtendedStatement.ml" 27 790 834
type(
  'f M.t * 'f M.t -> ('f * 'f) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 27 790 836 "ExtendedStatement.ml" 27 790 841
type(
  'c -> 'f M.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
)
"ExtendedStatement.ml" 27 790 842 "ExtendedStatement.ml" 27 790 843
type(
  'c
)
ident(
  int_ref x "ExtendedStatement.ml" 27 790 820 "ExtendedStatement.ml" 27 790 821
)
"ExtendedStatement.ml" 27 790 836 "ExtendedStatement.ml" 27 790 843
call(
  stack
)
type(
  'f M.t
)
"ExtendedStatement.ml" 27 790 845 "ExtendedStatement.ml" 27 790 850
type(
  'c -> 'f M.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 10 179 207
)
"ExtendedStatement.ml" 27 790 851 "ExtendedStatement.ml" 27 790 852
type(
  'c
)
ident(
  int_ref y "ExtendedStatement.ml" 27 790 823 "ExtendedStatement.ml" 27 790 824
)
"ExtendedStatement.ml" 27 790 845 "ExtendedStatement.ml" 27 790 852
call(
  stack
)
type(
  'f M.t
)
"ExtendedStatement.ml" 27 790 835 "ExtendedStatement.ml" 27 790 853
type(
  'f M.t * 'f M.t
)
"ExtendedStatement.ml" 27 790 829 "ExtendedStatement.ml" 27 790 853
call(
  stack
)
type(
  ('f * 'f) M.t
)
"ExtendedStatement.ml" 28 857 902 "ExtendedStatement.ml" 28 857 903
type(
  'f
)
ident(
  def x "ExtendedStatement.ml" 28 857 911 "ExtendedStatement.ml" 28 857 927
)
"ExtendedStatement.ml" 28 857 905 "ExtendedStatement.ml" 28 857 906
type(
  'f
)
ident(
  def y "ExtendedStatement.ml" 28 857 911 "ExtendedStatement.ml" 28 857 927
)
"ExtendedStatement.ml" 28 857 902 "ExtendedStatement.ml" 28 857 906
type(
  'f * 'f
)
"ExtendedStatement.ml" 28 857 922 "ExtendedStatement.ml" 28 857 923
type(
  'f
)
ident(
  int_ref x "ExtendedStatement.ml" 28 857 902 "ExtendedStatement.ml" 28 857 903
)
"ExtendedStatement.ml" 28 857 925 "ExtendedStatement.ml" 28 857 926
type(
  'f
)
ident(
  int_ref y "ExtendedStatement.ml" 28 857 905 "ExtendedStatement.ml" 28 857 906
)
"ExtendedStatement.ml" 28 857 921 "ExtendedStatement.ml" 28 857 927
type(
  'f * 'f
)
"ExtendedStatement.ml" 28 857 911 "ExtendedStatement.ml" 28 857 927
type(
  'k
)
"ExtendedStatement.ml" 28 857 896 "ExtendedStatement.ml" 28 857 928
type(
  'f * 'f -> 'k
)
"ExtendedStatement.ml" 27 790 829 "ExtendedStatement.ml" 28 857 928
call(
  tail
)
type(
  'k M.t
)
type(
  ('f * 'f) M.t -> ('f * 'f -> 'k) -> 'k M.t
)
ident(
  ext_ref M.( >= )
)
"ExtendedStatement.ml" 25 703 719 "ExtendedStatement.ml" 29 929 946
type(
  'j -> 'k M.t
)
"ExtendedStatement.ml" 30 948 964 "ExtendedStatement.ml" 30 948 965
type(
  'j list
)
ident(
  int_ref c "ExtendedStatement.ml" 22 637 661 "ExtendedStatement.ml" 22 637 662
)
"ExtendedStatement.ml" 23 665 682 "ExtendedStatement.ml" 31 966 979
call(
  stack
)
type(
  'k M.t list
)
"ExtendedStatement.ml" 23 665 677 "ExtendedStatement.ml" 31 966 979
call(
  tail
)
type(
  'k list M.t
)
"ExtendedStatement.ml" 22 637 661 "ExtendedStatement.ml" 31 966 979
type(
  'j list -> 'k list M.t
)
"ExtendedStatement.ml" 33 993 1003 "ExtendedStatement.ml" 33 993 1008
type(
  'e M.t *
  ((([> `Atom of 'f | `Interval of 'f * 'f ] as 'l) list * 'g list) list *
   'g list)
  M.t -> ('e * (('l list * 'g list) list * 'g list)) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 34 1011 1023 "ExtendedStatement.ml" 34 1011 1027
type(
  'b -> 'e M.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 10 179 212
)
"ExtendedStatement.ml" 34 1011 1028 "ExtendedStatement.ml" 34 1011 1029
type(
  'b
)
ident(
  int_ref e "ExtendedStatement.ml" 21 609 624 "ExtendedStatement.ml" 21 609 625
)
"ExtendedStatement.ml" 34 1011 1023 "ExtendedStatement.ml" 34 1011 1029
call(
  stack
)
type(
  'e M.t
)
"ExtendedStatement.ml" 35 1032 1044 "ExtendedStatement.ml" 35 1032 1049
type(
  ('l list * 'g list) list M.t * 'g list M.t ->
  (('l list * 'g list) list * 'g list) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 35 1032 1051 "ExtendedStatement.ml" 35 1032 1055
type(
  ('l list * 'g list) M.t list -> ('l list * 'g list) list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 35 1032 1057 "ExtendedStatement.ml" 35 1032 1060
type(
  ('i list * 'a list -> ('l list * 'g list) M.t) ->
  ('i list * 'a list) list -> ('l list * 'g list) M.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 35 1032 1067 "ExtendedStatement.ml" 35 1032 1068
type(
  'i list
)
ident(
  def c "ExtendedStatement.ml" 35 1032 1076 "ExtendedStatement.ml" 35 1032 1114
)
"ExtendedStatement.ml" 35 1032 1070 "ExtendedStatement.ml" 35 1032 1071
type(
  'a list
)
ident(
  def s "ExtendedStatement.ml" 35 1032 1076 "ExtendedStatement.ml" 35 1032 1114
)
"ExtendedStatement.ml" 35 1032 1067 "ExtendedStatement.ml" 35 1032 1071
type(
  'i list * 'a list
)
"ExtendedStatement.ml" 35 1032 1076 "ExtendedStatement.ml" 35 1032 1081
type(
  'l list M.t * 'g list M.t -> ('l list * 'g list) M.t
)
ident(
  ext_ref M.tuple
)
"ExtendedStatement.ml" 35 1032 1083 "ExtendedStatement.ml" 35 1032 1092
type(
  'i list -> 'l list M.t
)
ident(
  int_ref condition "ExtendedStatement.ml" 22 637 651 "ExtendedStatement.ml" 22 637 660
)
"ExtendedStatement.ml" 35 1032 1093 "ExtendedStatement.ml" 35 1032 1094
type(
  'i list
)
ident(
  int_ref c "ExtendedStatement.ml" 35 1032 1067 "ExtendedStatement.ml" 35 1032 1068
)
"ExtendedStatement.ml" 35 1032 1083 "ExtendedStatement.ml" 35 1032 1094
call(
  stack
)
type(
  'l list M.t
)
"ExtendedStatement.ml" 35 1032 1096 "ExtendedStatement.ml" 35 1032 1100
type(
  'g M.t list -> 'g list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 35 1032 1102 "ExtendedStatement.ml" 35 1032 1105
type(
  ('a -> 'g M.t) -> 'a list -> 'g M.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 35 1032 1106 "ExtendedStatement.ml" 35 1032 1110
type(
  'a -> 'g M.t
)
ident(
  int_ref self "ExtendedStatement.ml" 11 224 234 "ExtendedStatement.ml" 11 224 238
)
"ExtendedStatement.ml" 35 1032 1111 "ExtendedStatement.ml" 35 1032 1112
type(
  'a list
)
ident(
  int_ref s "ExtendedStatement.ml" 35 1032 1070 "ExtendedStatement.ml" 35 1032 1071
)
"ExtendedStatement.ml" 35 1032 1101 "ExtendedStatement.ml" 35 1032 1113
call(
  stack
)
type(
  'g M.t list
)
"ExtendedStatement.ml" 35 1032 1096 "ExtendedStatement.ml" 35 1032 1113
call(
  stack
)
type(
  'g list M.t
)
"ExtendedStatement.ml" 35 1032 1082 "ExtendedStatement.ml" 35 1032 1114
type(
  'l list M.t * 'g list M.t
)
"ExtendedStatement.ml" 35 1032 1076 "ExtendedStatement.ml" 35 1032 1114
call(
  tail
)
type(
  ('l list * 'g list) M.t
)
"ExtendedStatement.ml" 35 1032 1061 "ExtendedStatement.ml" 35 1032 1115
type(
  'i list * 'a list -> ('l list * 'g list) M.t
)
"ExtendedStatement.ml" 35 1032 1116 "ExtendedStatement.ml" 35 1032 1117
type(
  ('i list * 'a list) list
)
ident(
  int_ref b "ExtendedStatement.ml" 21 609 627 "ExtendedStatement.ml" 21 609 628
)
"ExtendedStatement.ml" 35 1032 1056 "ExtendedStatement.ml" 35 1032 1118
call(
  stack
)
type(
  ('l list * 'g list) M.t list
)
"ExtendedStatement.ml" 35 1032 1051 "ExtendedStatement.ml" 35 1032 1118
call(
  stack
)
type(
  ('l list * 'g list) list M.t
)
"ExtendedStatement.ml" 36 1120 1139 "ExtendedStatement.ml" 36 1120 1143
type(
  'g M.t list -> 'g list M.t
)
ident(
  ext_ref M.list
)
"ExtendedStatement.ml" 36 1120 1145 "ExtendedStatement.ml" 36 1120 1148
type(
  ('a -> 'g M.t) -> 'a list -> 'g M.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 36 1120 1149 "ExtendedStatement.ml" 36 1120 1153
type(
  'a -> 'g M.t
)
ident(
  int_ref self "ExtendedStatement.ml" 11 224 234 "ExtendedStatement.ml" 11 224 238
)
"ExtendedStatement.ml" 36 1120 1154 "ExtendedStatement.ml" 36 1120 1155
type(
  'a list
)
ident(
  int_ref s "ExtendedStatement.ml" 21 609 630 "ExtendedStatement.ml" 21 609 631
)
"ExtendedStatement.ml" 36 1120 1144 "ExtendedStatement.ml" 36 1120 1156
call(
  stack
)
type(
  'g M.t list
)
"ExtendedStatement.ml" 36 1120 1139 "ExtendedStatement.ml" 36 1120 1156
call(
  stack
)
type(
  'g list M.t
)
"ExtendedStatement.ml" 35 1032 1050 "ExtendedStatement.ml" 37 1157 1170
type(
  ('l list * 'g list) list M.t * 'g list M.t
)
"ExtendedStatement.ml" 35 1032 1044 "ExtendedStatement.ml" 37 1157 1170
call(
  stack
)
type(
  (('l list * 'g list) list * 'g list) M.t
)
"ExtendedStatement.ml" 33 993 1009 "ExtendedStatement.ml" 38 1171 1182
type(
  'e M.t * (('l list * 'g list) list * 'g list) M.t
)
"ExtendedStatement.ml" 33 993 1003 "ExtendedStatement.ml" 38 1171 1182
call(
  stack
)
type(
  ('e * (('l list * 'g list) list * 'g list)) M.t
)
"ExtendedStatement.ml" 38 1171 1193 "ExtendedStatement.ml" 38 1171 1194
type(
  'e
)
ident(
  def e "ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1224
)
"ExtendedStatement.ml" 38 1171 1197 "ExtendedStatement.ml" 38 1171 1198
type(
  ('l list * 'g list) list
)
ident(
  def b "ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1224
)
"ExtendedStatement.ml" 38 1171 1200 "ExtendedStatement.ml" 38 1171 1201
type(
  'g list
)
ident(
  def s "ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1224
)
"ExtendedStatement.ml" 38 1171 1197 "ExtendedStatement.ml" 38 1171 1201
type(
  ('l list * 'g list) list * 'g list
)
"ExtendedStatement.ml" 38 1171 1193 "ExtendedStatement.ml" 38 1171 1202
type(
  'e * (('l list * 'g list) list * 'g list)
)
"ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1208
type(
  'h
)
ident(
  int_ref t "ExtendedStatement.ml" 10 179 196 "ExtendedStatement.ml" 10 179 197
)
"ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1213
call(
  tail
)
type(
  'a -> 'e -> ('l list * 'g list) list -> 'g list -> 'g M.t
)
"ExtendedStatement.ml" 38 1171 1214 "ExtendedStatement.ml" 38 1171 1218
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 10 179 221
)
"ExtendedStatement.ml" 38 1171 1219 "ExtendedStatement.ml" 38 1171 1220
type(
  'e
)
ident(
  int_ref e "ExtendedStatement.ml" 38 1171 1193 "ExtendedStatement.ml" 38 1171 1194
)
"ExtendedStatement.ml" 38 1171 1221 "ExtendedStatement.ml" 38 1171 1222
type(
  ('l list * 'g list) list
)
ident(
  int_ref b "ExtendedStatement.ml" 38 1171 1197 "ExtendedStatement.ml" 38 1171 1198
)
"ExtendedStatement.ml" 38 1171 1223 "ExtendedStatement.ml" 38 1171 1224
type(
  'g list
)
ident(
  int_ref s "ExtendedStatement.ml" 38 1171 1200 "ExtendedStatement.ml" 38 1171 1201
)
"ExtendedStatement.ml" 38 1171 1207 "ExtendedStatement.ml" 38 1171 1224
type(
  'g M.t
)
"ExtendedStatement.ml" 38 1171 1187 "ExtendedStatement.ml" 38 1171 1225
type(
  'e * (('l list * 'g list) list * 'g list) -> 'g M.t
)
"ExtendedStatement.ml" 33 993 1003 "ExtendedStatement.ml" 38 1171 1225
call(
  tail
)
type(
  'g M.t
)
type(
  ('e * (('l list * 'g list) list * 'g list)) M.t ->
  ('e * (('l list * 'g list) list * 'g list) -> 'g M.t) -> 'g M.t
)
ident(
  ext_ref M.( >>= )
)
"ExtendedStatement.ml" 22 637 647 "ExtendedStatement.ml" 38 1171 1225
type(
  'g M.t
)
"ExtendedStatement.ml" 39 1226 1234 "ExtendedStatement.ml" 39 1226 1235
type(
  'a
)
ident(
  def x "ExtendedStatement.ml" 39 1226 1239 "ExtendedStatement.ml" 39 1226 1249
)
"ExtendedStatement.ml" 39 1226 1239 "ExtendedStatement.ml" 39 1226 1242
type(
  ('a -> 'g M.t) -> 'a -> 'g M.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 10 179 213 "ExtendedStatement.ml" 10 179 216
)
"ExtendedStatement.ml" 39 1226 1243 "ExtendedStatement.ml" 39 1226 1247
type(
  'a -> 'g M.t
)
ident(
  int_ref self "ExtendedStatement.ml" 11 224 234 "ExtendedStatement.ml" 11 224 238
)
"ExtendedStatement.ml" 39 1226 1248 "ExtendedStatement.ml" 39 1226 1249
type(
  'a
)
ident(
  int_ref x "ExtendedStatement.ml" 39 1226 1234 "ExtendedStatement.ml" 39 1226 1235
)
"ExtendedStatement.ml" 39 1226 1239 "ExtendedStatement.ml" 39 1226 1249
call(
  tail
)
type(
  'g M.t
)
"ExtendedStatement.ml" 12 270 276 "ExtendedStatement.ml" 39 1226 1249
type(
  'g M.t
)
"ExtendedStatement.ml" 11 224 230 "ExtendedStatement.ml" 39 1226 1249
type(
  'g M.t
)
"ExtendedStatement.ml" 10 179 217 "ExtendedStatement.ml" 39 1226 1249
type(
  'a -> 'g M.t
)
"ExtendedStatement.ml" 10 179 213 "ExtendedStatement.ml" 39 1226 1249
type(
  (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
"ExtendedStatement.ml" 10 179 208 "ExtendedStatement.ml" 39 1226 1249
type(
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
"ExtendedStatement.ml" 10 179 202 "ExtendedStatement.ml" 39 1226 1249
type(
  ('c -> 'f M.t) ->
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
"ExtendedStatement.ml" 10 179 198 "ExtendedStatement.ml" 39 1226 1249
type(
  ('d -> 'e M.t) ->
  ('c -> 'f M.t) ->
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
"ExtendedStatement.ml" 10 179 196 "ExtendedStatement.ml" 39 1226 1249
type(
  'h ->
  ('d -> 'e M.t) ->
  ('c -> 'f M.t) ->
  ('b -> 'e M.t) -> (('a -> 'g M.t) -> 'a -> 'g M.t) -> 'a -> 'g M.t
)
"ExtendedStatement.ml" 42 1257 1261 "ExtendedStatement.ml" 42 1257 1265
type(
  < case : ([> `Case of
                 'b *
                 ([< `Atom of 'c | `Interval of 'c * 'c ] list * 'a list)
                 list * 'a list
             | `For of 'd * 'b * 'b * 'c option * 'a list ]
            as 'a) ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g Monad.Id.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g Monad.Id.t;
    .. > ->
  ('d -> 'e Monad.Id.t) ->
  ('c -> 'f Monad.Id.t) ->
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
ident(
  def imap "ExtendedStatement.ml" 46 1368 1368 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 42 1257 1266 "ExtendedStatement.ml" 42 1257 1267
type(
  < case : 'a ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g Monad.Id.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g Monad.Id.t;
    .. >
  as 'h
)
ident(
  def t "ExtendedStatement.ml" 42 1257 1268 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 42 1257 1268 "ExtendedStatement.ml" 42 1257 1271
type(
  'd -> 'e Monad.Id.t
)
ident(
  def ref "ExtendedStatement.ml" 42 1257 1272 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 42 1257 1272 "ExtendedStatement.ml" 42 1257 1277
type(
  'c -> 'f Monad.Id.t
)
ident(
  def cexpr "ExtendedStatement.ml" 42 1257 1278 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 42 1257 1278 "ExtendedStatement.ml" 42 1257 1282
type(
  'b -> 'e Monad.Id.t
)
ident(
  def expr "ExtendedStatement.ml" 42 1257 1283 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 42 1257 1283 "ExtendedStatement.ml" 42 1257 1286
type(
  ('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
ident(
  def ext "ExtendedStatement.ml" 42 1257 1287 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 42 1257 1287 "ExtendedStatement.ml" 42 1257 1291
type(
  'a
)
ident(
  def stmt "ExtendedStatement.ml" 43 1294 1296 "ExtendedStatement.ml" 44 1332 1366
)
"ExtendedStatement.ml" 43 1294 1311 "ExtendedStatement.ml" 43 1294 1328
call(
  stack
)
"ExtendedStatement.ml" 44 1332 1334 "ExtendedStatement.ml" 44 1332 1340
type(
  'h ->
  ('d -> 'e Monad.Id.t) ->
  ('c -> 'f Monad.Id.t) ->
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
ident(
  int_ref M.gmap "ExtendedStatement.ml" 10 179 191 "ExtendedStatement.ml" 10 179 195
)
"ExtendedStatement.ml" 44 1332 1341 "ExtendedStatement.ml" 44 1332 1342
type(
  'h
)
ident(
  int_ref t "ExtendedStatement.ml" 42 1257 1266 "ExtendedStatement.ml" 42 1257 1267
)
"ExtendedStatement.ml" 44 1332 1343 "ExtendedStatement.ml" 44 1332 1346
type(
  'd -> 'e Monad.Id.t
)
ident(
  int_ref ref "ExtendedStatement.ml" 42 1257 1268 "ExtendedStatement.ml" 42 1257 1271
)
"ExtendedStatement.ml" 44 1332 1347 "ExtendedStatement.ml" 44 1332 1352
type(
  'c -> 'f Monad.Id.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 42 1257 1272 "ExtendedStatement.ml" 42 1257 1277
)
"ExtendedStatement.ml" 44 1332 1353 "ExtendedStatement.ml" 44 1332 1357
type(
  'b -> 'e Monad.Id.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 42 1257 1278 "ExtendedStatement.ml" 42 1257 1282
)
"ExtendedStatement.ml" 44 1332 1358 "ExtendedStatement.ml" 44 1332 1361
type(
  ('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 42 1257 1283 "ExtendedStatement.ml" 42 1257 1286
)
"ExtendedStatement.ml" 44 1332 1362 "ExtendedStatement.ml" 44 1332 1366
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 42 1257 1287 "ExtendedStatement.ml" 42 1257 1291
)
"ExtendedStatement.ml" 44 1332 1334 "ExtendedStatement.ml" 44 1332 1366
call(
  tail
)
type(
  'g Monad.Id.t
)
"ExtendedStatement.ml" 43 1294 1296 "ExtendedStatement.ml" 44 1332 1366
type(
  'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1287 "ExtendedStatement.ml" 44 1332 1366
type(
  'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1283 "ExtendedStatement.ml" 44 1332 1366
type(
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1278 "ExtendedStatement.ml" 44 1332 1366
type(
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1272 "ExtendedStatement.ml" 44 1332 1366
type(
  ('c -> 'f Monad.Id.t) ->
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1268 "ExtendedStatement.ml" 44 1332 1366
type(
  ('d -> 'e Monad.Id.t) ->
  ('c -> 'f Monad.Id.t) ->
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 42 1257 1266 "ExtendedStatement.ml" 44 1332 1366
type(
  'h ->
  ('d -> 'e Monad.Id.t) ->
  ('c -> 'f Monad.Id.t) ->
  ('b -> 'e Monad.Id.t) ->
  (('a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t) -> 'a -> 'g Monad.Id.t
)
"ExtendedStatement.ml" 46 1368 1372 "ExtendedStatement.ml" 46 1368 1376
type(
  < case : ([> `Case of
                 'b *
                 ([< `Atom of 'c | `Interval of 'c * 'c ] list * 'a list)
                 list * 'a list
             | `For of 'd * 'b * 'b * 'c option * 'a list ]
            as 'a) ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g Monad.Checked.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g Monad.Checked.t;
    .. > ->
  ('d -> 'e Monad.Checked.t) ->
  ('c -> 'f Monad.Checked.t) ->
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
ident(
  def cmap "ExtendedStatement.ml" 50 1484 1484 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 46 1368 1377 "ExtendedStatement.ml" 46 1368 1378
type(
  < case : 'a ->
           'e ->
           ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'g list) list ->
           'g list -> 'g Monad.Checked.t;
    forc : 'a -> 'e -> 'e -> 'e -> 'f option -> 'g list -> 'g Monad.Checked.t;
    .. >
  as 'h
)
ident(
  def t "ExtendedStatement.ml" 46 1368 1379 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 46 1368 1379 "ExtendedStatement.ml" 46 1368 1382
type(
  'd -> 'e Monad.Checked.t
)
ident(
  def ref "ExtendedStatement.ml" 46 1368 1383 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 46 1368 1383 "ExtendedStatement.ml" 46 1368 1388
type(
  'c -> 'f Monad.Checked.t
)
ident(
  def cexpr "ExtendedStatement.ml" 46 1368 1389 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 46 1368 1389 "ExtendedStatement.ml" 46 1368 1393
type(
  'b -> 'e Monad.Checked.t
)
ident(
  def expr "ExtendedStatement.ml" 46 1368 1394 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 46 1368 1394 "ExtendedStatement.ml" 46 1368 1397
type(
  ('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t
)
ident(
  def ext "ExtendedStatement.ml" 46 1368 1398 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 46 1368 1398 "ExtendedStatement.ml" 46 1368 1402
type(
  'a
)
ident(
  def stmt "ExtendedStatement.ml" 47 1405 1407 "ExtendedStatement.ml" 48 1448 1482
)
"ExtendedStatement.ml" 47 1405 1422 "ExtendedStatement.ml" 47 1405 1444
call(
  stack
)
"ExtendedStatement.ml" 48 1448 1450 "ExtendedStatement.ml" 48 1448 1456
type(
  'h ->
  ('d -> 'e Monad.Checked.t) ->
  ('c -> 'f Monad.Checked.t) ->
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
ident(
  int_ref M.gmap "ExtendedStatement.ml" 10 179 191 "ExtendedStatement.ml" 10 179 195
)
"ExtendedStatement.ml" 48 1448 1457 "ExtendedStatement.ml" 48 1448 1458
type(
  'h
)
ident(
  int_ref t "ExtendedStatement.ml" 46 1368 1377 "ExtendedStatement.ml" 46 1368 1378
)
"ExtendedStatement.ml" 48 1448 1459 "ExtendedStatement.ml" 48 1448 1462
type(
  'd -> 'e Monad.Checked.t
)
ident(
  int_ref ref "ExtendedStatement.ml" 46 1368 1379 "ExtendedStatement.ml" 46 1368 1382
)
"ExtendedStatement.ml" 48 1448 1463 "ExtendedStatement.ml" 48 1448 1468
type(
  'c -> 'f Monad.Checked.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 46 1368 1383 "ExtendedStatement.ml" 46 1368 1388
)
"ExtendedStatement.ml" 48 1448 1469 "ExtendedStatement.ml" 48 1448 1473
type(
  'b -> 'e Monad.Checked.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 46 1368 1389 "ExtendedStatement.ml" 46 1368 1393
)
"ExtendedStatement.ml" 48 1448 1474 "ExtendedStatement.ml" 48 1448 1477
type(
  ('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 46 1368 1394 "ExtendedStatement.ml" 46 1368 1397
)
"ExtendedStatement.ml" 48 1448 1478 "ExtendedStatement.ml" 48 1448 1482
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 46 1368 1398 "ExtendedStatement.ml" 46 1368 1402
)
"ExtendedStatement.ml" 48 1448 1450 "ExtendedStatement.ml" 48 1448 1482
call(
  tail
)
type(
  'g Monad.Checked.t
)
"ExtendedStatement.ml" 47 1405 1407 "ExtendedStatement.ml" 48 1448 1482
type(
  'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1398 "ExtendedStatement.ml" 48 1448 1482
type(
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1394 "ExtendedStatement.ml" 48 1448 1482
type(
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1389 "ExtendedStatement.ml" 48 1448 1482
type(
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1383 "ExtendedStatement.ml" 48 1448 1482
type(
  ('c -> 'f Monad.Checked.t) ->
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1379 "ExtendedStatement.ml" 48 1448 1482
type(
  ('d -> 'e Monad.Checked.t) ->
  ('c -> 'f Monad.Checked.t) ->
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 46 1368 1377 "ExtendedStatement.ml" 48 1448 1482
type(
  'h ->
  ('d -> 'e Monad.Checked.t) ->
  ('c -> 'f Monad.Checked.t) ->
  ('b -> 'e Monad.Checked.t) ->
  (('a -> 'g Monad.Checked.t) -> 'a -> 'g Monad.Checked.t) ->
  'a -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 50 1484 1488 "ExtendedStatement.ml" 50 1484 1492
type(
  ('a -> [> `Case of 'b * 'c * 'd | `For of 'e * 'f * 'g * 'h * 'i ] -> 'j) ->
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j >
)
ident(
  def mapT "ExtendedStatement.ml" 57 1756 1756 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 50 1484 1493 "ExtendedStatement.ml" 50 1484 1494
type(
  'a ->
  ([> `Case of 'b * 'c * 'd | `For of 'e * 'f * 'g * 'h * 'i ] as 'k) -> 'j
)
ident(
  def f "ExtendedStatement.ml" 50 1484 1497 "ExtendedStatement.ml" 53 1648 1664
)
"ExtendedStatement.ml" 51 1504 1531 "ExtendedStatement.ml" 51 1504 1535
type(
  'a
)
ident(
  def stmt "ExtendedStatement.ml" 51 1504 1536 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1536 "ExtendedStatement.ml" 51 1504 1537
type(
  'e
)
ident(
  def i "ExtendedStatement.ml" 51 1504 1538 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1538 "ExtendedStatement.ml" 51 1504 1539
type(
  'f
)
ident(
  def l "ExtendedStatement.ml" 51 1504 1540 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1540 "ExtendedStatement.ml" 51 1504 1541
type(
  'g
)
ident(
  def u "ExtendedStatement.ml" 51 1504 1542 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1542 "ExtendedStatement.ml" 51 1504 1543
type(
  'h
)
ident(
  def s "ExtendedStatement.ml" 51 1504 1544 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1544 "ExtendedStatement.ml" 51 1504 1545
type(
  'i
)
ident(
  def b "ExtendedStatement.ml" 51 1504 1548 "ExtendedStatement.ml" 51 1504 1578
)
"ExtendedStatement.ml" 51 1504 1548 "ExtendedStatement.ml" 51 1504 1549
type(
  'a -> 'k -> 'j
)
ident(
  int_ref f "ExtendedStatement.ml" 50 1484 1493 "ExtendedStatement.ml" 50 1484 1494
)
"ExtendedStatement.ml" 51 1504 1550 "ExtendedStatement.ml" 51 1504 1554
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 51 1504 1531 "ExtendedStatement.ml" 51 1504 1535
)
"ExtendedStatement.ml" 51 1504 1563 "ExtendedStatement.ml" 51 1504 1564
type(
  'e
)
ident(
  int_ref i "ExtendedStatement.ml" 51 1504 1536 "ExtendedStatement.ml" 51 1504 1537
)
"ExtendedStatement.ml" 51 1504 1566 "ExtendedStatement.ml" 51 1504 1567
type(
  'f
)
ident(
  int_ref l "ExtendedStatement.ml" 51 1504 1538 "ExtendedStatement.ml" 51 1504 1539
)
"ExtendedStatement.ml" 51 1504 1569 "ExtendedStatement.ml" 51 1504 1570
type(
  'g
)
ident(
  int_ref u "ExtendedStatement.ml" 51 1504 1540 "ExtendedStatement.ml" 51 1504 1541
)
"ExtendedStatement.ml" 51 1504 1572 "ExtendedStatement.ml" 51 1504 1573
type(
  'h
)
ident(
  int_ref s "ExtendedStatement.ml" 51 1504 1542 "ExtendedStatement.ml" 51 1504 1543
)
"ExtendedStatement.ml" 51 1504 1575 "ExtendedStatement.ml" 51 1504 1576
type(
  'i
)
ident(
  int_ref b "ExtendedStatement.ml" 51 1504 1544 "ExtendedStatement.ml" 51 1504 1545
)
"ExtendedStatement.ml" 51 1504 1562 "ExtendedStatement.ml" 51 1504 1577
type(
  'e * 'f * 'g * 'h * 'i
)
"ExtendedStatement.ml" 51 1504 1555 "ExtendedStatement.ml" 51 1504 1578
type(
  'k
)
"ExtendedStatement.ml" 51 1504 1548 "ExtendedStatement.ml" 51 1504 1578
call(
  tail
)
type(
  'j
)
"ExtendedStatement.ml" 51 1504 1544 "ExtendedStatement.ml" 51 1504 1578
type(
  'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1542 "ExtendedStatement.ml" 51 1504 1578
type(
  'h -> 'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1540 "ExtendedStatement.ml" 51 1504 1578
type(
  'g -> 'h -> 'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1538 "ExtendedStatement.ml" 51 1504 1578
type(
  'f -> 'g -> 'h -> 'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1536 "ExtendedStatement.ml" 51 1504 1578
type(
  'e -> 'f -> 'g -> 'h -> 'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1531 "ExtendedStatement.ml" 51 1504 1578
type(
  'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j
)
type(
  'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j
)
"ExtendedStatement.ml" 51 1504 1519 "ExtendedStatement.ml" 51 1504 1578
type(
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j > ->
  'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j
)
"ExtendedStatement.ml" 52 1579 1606 "ExtendedStatement.ml" 52 1579 1610
type(
  'a
)
ident(
  def stmt "ExtendedStatement.ml" 52 1579 1611 "ExtendedStatement.ml" 52 1579 1647
)
"ExtendedStatement.ml" 52 1579 1611 "ExtendedStatement.ml" 52 1579 1612
type(
  'b
)
ident(
  def e "ExtendedStatement.ml" 52 1579 1613 "ExtendedStatement.ml" 52 1579 1647
)
"ExtendedStatement.ml" 52 1579 1613 "ExtendedStatement.ml" 52 1579 1614
type(
  'c
)
ident(
  def b "ExtendedStatement.ml" 52 1579 1615 "ExtendedStatement.ml" 52 1579 1647
)
"ExtendedStatement.ml" 52 1579 1615 "ExtendedStatement.ml" 52 1579 1616
type(
  'd
)
ident(
  def s "ExtendedStatement.ml" 52 1579 1623 "ExtendedStatement.ml" 52 1579 1647
)
"ExtendedStatement.ml" 52 1579 1623 "ExtendedStatement.ml" 52 1579 1624
type(
  'a -> 'k -> 'j
)
ident(
  int_ref f "ExtendedStatement.ml" 50 1484 1493 "ExtendedStatement.ml" 50 1484 1494
)
"ExtendedStatement.ml" 52 1579 1625 "ExtendedStatement.ml" 52 1579 1629
type(
  'a
)
ident(
  int_ref stmt "ExtendedStatement.ml" 52 1579 1606 "ExtendedStatement.ml" 52 1579 1610
)
"ExtendedStatement.ml" 52 1579 1638 "ExtendedStatement.ml" 52 1579 1639
type(
  'b
)
ident(
  int_ref e "ExtendedStatement.ml" 52 1579 1611 "ExtendedStatement.ml" 52 1579 1612
)
"ExtendedStatement.ml" 52 1579 1641 "ExtendedStatement.ml" 52 1579 1642
type(
  'c
)
ident(
  int_ref b "ExtendedStatement.ml" 52 1579 1613 "ExtendedStatement.ml" 52 1579 1614
)
"ExtendedStatement.ml" 52 1579 1644 "ExtendedStatement.ml" 52 1579 1645
type(
  'd
)
ident(
  int_ref s "ExtendedStatement.ml" 52 1579 1615 "ExtendedStatement.ml" 52 1579 1616
)
"ExtendedStatement.ml" 52 1579 1637 "ExtendedStatement.ml" 52 1579 1646
type(
  'b * 'c * 'd
)
"ExtendedStatement.ml" 52 1579 1630 "ExtendedStatement.ml" 52 1579 1647
type(
  'k
)
"ExtendedStatement.ml" 52 1579 1623 "ExtendedStatement.ml" 52 1579 1647
call(
  tail
)
type(
  'j
)
"ExtendedStatement.ml" 52 1579 1615 "ExtendedStatement.ml" 52 1579 1647
type(
  'd -> 'j
)
"ExtendedStatement.ml" 52 1579 1613 "ExtendedStatement.ml" 52 1579 1647
type(
  'c -> 'd -> 'j
)
"ExtendedStatement.ml" 52 1579 1611 "ExtendedStatement.ml" 52 1579 1647
type(
  'b -> 'c -> 'd -> 'j
)
"ExtendedStatement.ml" 52 1579 1606 "ExtendedStatement.ml" 52 1579 1647
type(
  'a -> 'b -> 'c -> 'd -> 'j
)
type(
  'a -> 'b -> 'c -> 'd -> 'j
)
"ExtendedStatement.ml" 52 1579 1594 "ExtendedStatement.ml" 52 1579 1647
type(
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j > ->
  'a -> 'b -> 'c -> 'd -> 'j
)
"ExtendedStatement.ml" 50 1484 1497 "ExtendedStatement.ml" 53 1648 1664
type(
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j >
)
type(
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j >
)
"ExtendedStatement.ml" 50 1484 1493 "ExtendedStatement.ml" 53 1648 1664
type(
  ('a -> 'k -> 'j) ->
  < case : 'a -> 'b -> 'c -> 'd -> 'j;
    forc : 'a -> 'e -> 'f -> 'g -> 'h -> 'i -> 'j >
)
"ExtendedStatement.ml" 58 1764 1772 "ExtendedStatement.ml" 58 1764 1775
type(
  (< look : string ->
            ('a, 'b, < add : 'c -> 'c; .. > as 'c) Ostap.Combinators.result;
     regexp : string -> string -> ('a, 'd, 'c) Ostap.Combinators.result; .. >
   as 'a, 'e, 'c)
  Ostap.Combinators.parse
)
ident(
  def ref "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 58 1764 1777 "ExtendedStatement.ml" 58 1764 1782
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  def cexpr "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 58 1764 1784 "ExtendedStatement.ml" 58 1764 1788
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  def expr "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 58 1764 1790 "ExtendedStatement.ml" 58 1764 1794
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  def stmt "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 59 1798 1802 "ExtendedStatement.ml" 59 1798 1814
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a ->
  ('a,
   [> `Case of
        'g * ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'h list) list *
        'h list
    | `For of 'e * 'g * 'g * 'f option * 'h list ],
   'c)
  Ostap.Combinators.result
)
ident(
  int_ref forStatement "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 59 1798 1815 "ExtendedStatement.ml" 59 1798 1818
type(
  ('a, 'e, 'c) Ostap.Combinators.parse
)
ident(
  int_ref ref "ExtendedStatement.ml" 58 1764 1772 "ExtendedStatement.ml" 58 1764 1775
)
"ExtendedStatement.ml" 59 1798 1820 "ExtendedStatement.ml" 59 1798 1824
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  int_ref expr "ExtendedStatement.ml" 58 1764 1784 "ExtendedStatement.ml" 58 1764 1788
)
"ExtendedStatement.ml" 59 1798 1826 "ExtendedStatement.ml" 59 1798 1831
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 58 1764 1777 "ExtendedStatement.ml" 58 1764 1782
)
"ExtendedStatement.ml" 59 1798 1833 "ExtendedStatement.ml" 59 1798 1837
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  int_ref stmt "ExtendedStatement.ml" 58 1764 1790 "ExtendedStatement.ml" 58 1764 1794
)
"ExtendedStatement.ml" 59 1798 1802 "ExtendedStatement.ml" 59 1798 1838
call(
  tail
)
type(
  ('a,
   [> `Case of
        'g * ([> `Atom of 'f | `Interval of 'f * 'f ] list * 'h list) list *
        'h list
    | `For of 'e * 'g * 'g * 'f option * 'h list ]
   as 'i, 'c)
  Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 59 1798 1802 "ExtendedStatement.ml" 59 1798 1838
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 59 1798 1802 "ExtendedStatement.ml" 59 1798 1838
)
"ExtendedStatement.ml" 60 1840 1844 "ExtendedStatement.ml" 60 1840 1857
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
ident(
  int_ref caseStatement "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 60 1840 1858 "ExtendedStatement.ml" 60 1840 1863
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 58 1764 1777 "ExtendedStatement.ml" 58 1764 1782
)
"ExtendedStatement.ml" 60 1840 1865 "ExtendedStatement.ml" 60 1840 1869
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  int_ref expr "ExtendedStatement.ml" 58 1764 1784 "ExtendedStatement.ml" 58 1764 1788
)
"ExtendedStatement.ml" 60 1840 1871 "ExtendedStatement.ml" 60 1840 1875
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  int_ref stmt "ExtendedStatement.ml" 58 1764 1790 "ExtendedStatement.ml" 58 1764 1794
)
"ExtendedStatement.ml" 60 1840 1844 "ExtendedStatement.ml" 60 1840 1876
call(
  tail
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 60 1840 1844 "ExtendedStatement.ml" 60 1840 1876
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 60 1840 1844 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 59 1798 1802 "ExtendedStatement.ml" 60 1840 1876
type(
  ('a, 'i, 'c) Ostap.Combinators.parse ->
  ('a, 'i, 'c) Ostap.Combinators.parse ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
call(
  tail
)
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 60 1840 1876
)
"ExtendedStatement.ml" 61 1878 1893 "ExtendedStatement.ml" 61 1878 1896
type(
  ('a, 'e, 'c) Ostap.Combinators.parse
)
ident(
  def ref "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 61 1878 1898 "ExtendedStatement.ml" 61 1878 1902
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  def expr "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 61 1878 1904 "ExtendedStatement.ml" 61 1878 1909
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  def cexpr "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 61 1878 1911 "ExtendedStatement.ml" 61 1878 1915
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  def stmt "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 62 1919 1926
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 62 1919 1927 "ExtendedStatement.ml" 62 1919 1932
type(
  string
)
"ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 62 1919 1933
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 62 1919 1933
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 62 1919 1933
)
"ExtendedStatement.ml" 62 1919 1934 "ExtendedStatement.ml" 62 1919 1936
type(
  'e
)
ident(
  def i "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 62 1919 1936 "ExtendedStatement.ml" 62 1919 1939
type(
  ('a, 'e, 'c) Ostap.Combinators.parse
)
ident(
  int_ref ref "ExtendedStatement.ml" 61 1878 1893 "ExtendedStatement.ml" 61 1878 1896
)
"ExtendedStatement.ml" 62 1919 1940 "ExtendedStatement.ml" 62 1919 1944
call(
  tail
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  string
)
type(
  string -> ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 62 1919 1940 "ExtendedStatement.ml" 62 1919 1944
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 62 1919 1940 "ExtendedStatement.ml" 62 1919 1944
)
"ExtendedStatement.ml" 62 1919 1945 "ExtendedStatement.ml" 62 1919 1948
type(
  'g
)
ident(
  def lb "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 62 1919 1948 "ExtendedStatement.ml" 62 1919 1952
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  int_ref expr "ExtendedStatement.ml" 61 1878 1898 "ExtendedStatement.ml" 61 1878 1902
)
"ExtendedStatement.ml" 62 1919 1953 "ExtendedStatement.ml" 62 1919 1956
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 62 1919 1957 "ExtendedStatement.ml" 62 1919 1961
type(
  string
)
"ExtendedStatement.ml" 62 1919 1953 "ExtendedStatement.ml" 62 1919 1962
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 62 1919 1953 "ExtendedStatement.ml" 62 1919 1962
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 62 1919 1953 "ExtendedStatement.ml" 62 1919 1962
)
"ExtendedStatement.ml" 62 1919 1963 "ExtendedStatement.ml" 62 1919 1966
type(
  'g
)
ident(
  def ub "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 62 1919 1966 "ExtendedStatement.ml" 62 1919 1970
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  int_ref expr "ExtendedStatement.ml" 61 1878 1898 "ExtendedStatement.ml" 61 1878 1902
)
"ExtendedStatement.ml" 62 1919 1971 "ExtendedStatement.ml" 62 1919 1976
type(
  'f option
)
ident(
  def step "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 62 1919 1978 "ExtendedStatement.ml" 62 1919 1981
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 62 1919 1982 "ExtendedStatement.ml" 62 1919 1986
type(
  string
)
"ExtendedStatement.ml" 62 1919 1978 "ExtendedStatement.ml" 62 1919 1987
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 62 1919 1978 "ExtendedStatement.ml" 62 1919 1987
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 62 1919 1978 "ExtendedStatement.ml" 62 1919 1987
)
"ExtendedStatement.ml" 62 1919 1988 "ExtendedStatement.ml" 62 1919 1993
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 61 1878 1904 "ExtendedStatement.ml" 61 1878 1909
)
"ExtendedStatement.ml" 62 1919 1977 "ExtendedStatement.ml" 62 1919 1993
call(
  stack
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
type(
  'd -> ('a, 'f, 'c) Ostap.Combinators.parse
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'f, 'c) Ostap.Combinators.parse) ->
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 62 1919 1976 "ExtendedStatement.ml" 62 1919 1995
call(
  stack
)
type(
  ('a, 'f option, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'f option, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"ExtendedStatement.ml" 63 1996 2003 "ExtendedStatement.ml" 63 1996 2006
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 63 1996 2007 "ExtendedStatement.ml" 63 1996 2011
type(
  string
)
"ExtendedStatement.ml" 63 1996 2003 "ExtendedStatement.ml" 63 1996 2012
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 63 1996 2003 "ExtendedStatement.ml" 63 1996 2012
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 63 1996 2003 "ExtendedStatement.ml" 63 1996 2012
)
"ExtendedStatement.ml" 63 1996 2013 "ExtendedStatement.ml" 63 1996 2018
type(
  'h list
)
ident(
  def body "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 63 1996 2018 "ExtendedStatement.ml" 63 1996 2022
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'h list, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.oseq
)
"ExtendedStatement.ml" 63 1996 2023 "ExtendedStatement.ml" 63 1996 2027
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  int_ref stmt "ExtendedStatement.ml" 61 1878 1911 "ExtendedStatement.ml" 61 1878 1915
)
"ExtendedStatement.ml" 63 1996 2018 "ExtendedStatement.ml" 63 1996 2028
call(
  tail
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 63 1996 2018 "ExtendedStatement.ml" 63 1996 2028
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 63 1996 2018 "ExtendedStatement.ml" 63 1996 2028
)
"ExtendedStatement.ml" 63 1996 2029 "ExtendedStatement.ml" 63 1996 2032
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 63 1996 2033 "ExtendedStatement.ml" 63 1996 2038
type(
  string
)
"ExtendedStatement.ml" 63 1996 2029 "ExtendedStatement.ml" 63 1996 2039
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 63 1996 2029 "ExtendedStatement.ml" 63 1996 2039
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 63 1996 2029 "ExtendedStatement.ml" 63 1996 2039
)
"ExtendedStatement.ml" 64 2042 2052 "ExtendedStatement.ml" 64 2042 2053
type(
  'e
)
ident(
  int_ref i "ExtendedStatement.ml" 62 1919 1934 "ExtendedStatement.ml" 62 1919 1936
)
"ExtendedStatement.ml" 64 2042 2055 "ExtendedStatement.ml" 64 2042 2057
type(
  'g
)
ident(
  int_ref lb "ExtendedStatement.ml" 62 1919 1945 "ExtendedStatement.ml" 62 1919 1948
)
"ExtendedStatement.ml" 64 2042 2059 "ExtendedStatement.ml" 64 2042 2061
type(
  'g
)
ident(
  int_ref ub "ExtendedStatement.ml" 62 1919 1963 "ExtendedStatement.ml" 62 1919 1966
)
"ExtendedStatement.ml" 64 2042 2063 "ExtendedStatement.ml" 64 2042 2067
type(
  'f option
)
ident(
  int_ref step "ExtendedStatement.ml" 62 1919 1971 "ExtendedStatement.ml" 62 1919 1976
)
"ExtendedStatement.ml" 64 2042 2069 "ExtendedStatement.ml" 64 2042 2073
type(
  'h list
)
ident(
  int_ref body "ExtendedStatement.ml" 63 1996 2013 "ExtendedStatement.ml" 63 1996 2018
)
"ExtendedStatement.ml" 64 2042 2051 "ExtendedStatement.ml" 64 2042 2074
type(
  'e * 'g * 'g * 'f option * 'h list
)
"ExtendedStatement.ml" 64 2042 2046 "ExtendedStatement.ml" 64 2042 2074
type(
  'i
)
"ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  'd -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'e -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'b -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'g -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'd -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'g -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'f option -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'd -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'h list -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'd -> 'i
)
type(
  'd
)
ident(
  def _0 "ExtendedStatement.ml" 64 2042 2046 "ExtendedStatement.ml" 64 2042 2074
)
type(
  'd
)
type(
  ('d -> 'i) ->
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h list
)
ident(
  def _1 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.parse ->
  ('h list -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'd
)
ident(
  def _2 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'f option
)
ident(
  def _3 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  ('a, 'f option, 'c) Ostap.Combinators.parse ->
  ('f option -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
ident(
  def _4 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('g -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'd
)
ident(
  def _5 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
ident(
  def _6 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('g -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'b
)
ident(
  def _7 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  'b
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse ->
  ('b -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'e
)
ident(
  def _8 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('e -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'd
)
ident(
  def _9 "ExtendedStatement.ml" 62 1919 1923 "ExtendedStatement.ml" 65 2075 2078
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
call(
  tail
)
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 61 1878 1880 "ExtendedStatement.ml" 65 2075 2078
)
"ExtendedStatement.ml" 66 2080 2096 "ExtendedStatement.ml" 66 2080 2101
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  def cexpr "ExtendedStatement.ml" 66 2080 2082 "ExtendedStatement.ml" 71 2228 2232
)
"ExtendedStatement.ml" 67 2105 2108 "ExtendedStatement.ml" 67 2105 2112
type(
  ('a, [> `Atom of 'f | `Interval of 'f * 'f ] as 'j, 'c)
  Ostap.Combinators.parse -> 'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Ostap.Util.list
)
"ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 68 2121 2129
type(
  'f
)
ident(
  def a "ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 70 2220 2227
)
"ExtendedStatement.ml" 68 2121 2129 "ExtendedStatement.ml" 68 2121 2134
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 66 2080 2096 "ExtendedStatement.ml" 66 2080 2101
)
"ExtendedStatement.ml" 68 2121 2135 "ExtendedStatement.ml" 68 2121 2137
type(
  'f option
)
ident(
  def b "ExtendedStatement.ml" 69 2154 2162 "ExtendedStatement.ml" 69 2154 2219
)
"ExtendedStatement.ml" 68 2121 2139 "ExtendedStatement.ml" 68 2121 2143
call(
  tail
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  string
)
type(
  string -> ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 68 2121 2139 "ExtendedStatement.ml" 68 2121 2143
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 68 2121 2139 "ExtendedStatement.ml" 68 2121 2143
)
"ExtendedStatement.ml" 68 2121 2144 "ExtendedStatement.ml" 68 2121 2149
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 66 2080 2096 "ExtendedStatement.ml" 66 2080 2101
)
"ExtendedStatement.ml" 68 2121 2138 "ExtendedStatement.ml" 68 2121 2149
call(
  stack
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
type(
  'b -> ('a, 'f, 'c) Ostap.Combinators.parse
)
type(
  'b
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse ->
  ('b -> ('a, 'f, 'c) Ostap.Combinators.parse) ->
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 68 2121 2137 "ExtendedStatement.ml" 68 2121 2151
call(
  stack
)
type(
  ('a, 'f option, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'f option, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"ExtendedStatement.ml" 69 2154 2168 "ExtendedStatement.ml" 69 2154 2169
type(
  'f option
)
ident(
  int_ref b "ExtendedStatement.ml" 68 2121 2135 "ExtendedStatement.ml" 68 2121 2137
)
"ExtendedStatement.ml" 69 2154 2175 "ExtendedStatement.ml" 69 2154 2179
type(
  'f option
)
"ExtendedStatement.ml" 69 2154 2189 "ExtendedStatement.ml" 69 2154 2190
type(
  'f
)
ident(
  int_ref a "ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 68 2121 2129
)
"ExtendedStatement.ml" 69 2154 2183 "ExtendedStatement.ml" 69 2154 2190
type(
  'j
)
"ExtendedStatement.ml" 69 2154 2198 "ExtendedStatement.ml" 69 2154 2199
type(
  'f
)
ident(
  def b "ExtendedStatement.ml" 69 2154 2203 "ExtendedStatement.ml" 69 2154 2219
)
"ExtendedStatement.ml" 69 2154 2193 "ExtendedStatement.ml" 69 2154 2199
type(
  'f option
)
"ExtendedStatement.ml" 69 2154 2214 "ExtendedStatement.ml" 69 2154 2215
type(
  'f
)
ident(
  int_ref a "ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 68 2121 2129
)
"ExtendedStatement.ml" 69 2154 2217 "ExtendedStatement.ml" 69 2154 2218
type(
  'f
)
ident(
  int_ref b "ExtendedStatement.ml" 69 2154 2198 "ExtendedStatement.ml" 69 2154 2199
)
"ExtendedStatement.ml" 69 2154 2213 "ExtendedStatement.ml" 69 2154 2219
type(
  'f * 'f
)
"ExtendedStatement.ml" 69 2154 2203 "ExtendedStatement.ml" 69 2154 2219
type(
  'j
)
"ExtendedStatement.ml" 69 2154 2162 "ExtendedStatement.ml" 69 2154 2219
type(
  'j
)
"ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 70 2220 2227
call(
  tail
)
type(
  'f -> ('a, 'j, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j, 'c) Ostap.Combinators.parse
)
type(
  'f option -> 'j
)
type(
  'f option
)
ident(
  def _0 "ExtendedStatement.ml" 69 2154 2162 "ExtendedStatement.ml" 69 2154 2219
)
type(
  ('f option -> 'j) ->
  ('a, 'f option, 'c) Ostap.Combinators.parse ->
  ('a, 'j, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'f
)
ident(
  def _1 "ExtendedStatement.ml" 68 2121 2127 "ExtendedStatement.ml" 70 2220 2227
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('f -> ('a, 'j, 'c) Ostap.Combinators.parse) ->
  ('a, 'j, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 67 2105 2113 "ExtendedStatement.ml" 71 2228 2231
call(
  tail
)
type(
  ('a, 'j, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 67 2105 2113 "ExtendedStatement.ml" 71 2228 2231
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 67 2105 2113 "ExtendedStatement.ml" 71 2228 2231
)
"ExtendedStatement.ml" 67 2105 2108 "ExtendedStatement.ml" 71 2228 2232
call(
  tail
)
type(
  'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 67 2105 2108 "ExtendedStatement.ml" 71 2228 2232
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 67 2105 2108 "ExtendedStatement.ml" 71 2228 2232
)
"ExtendedStatement.ml" 66 2080 2082 "ExtendedStatement.ml" 71 2228 2232
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 66 2080 2082 "ExtendedStatement.ml" 71 2228 2232
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 66 2080 2082 "ExtendedStatement.ml" 71 2228 2232
)
"ExtendedStatement.ml" 72 2234 2250 "ExtendedStatement.ml" 72 2234 2255
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  def cexpr "ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 72 2234 2257 "ExtendedStatement.ml" 72 2234 2261
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  def expr "ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 72 2234 2263 "ExtendedStatement.ml" 72 2234 2267
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  def stmt "ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 73 2270 2277
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 73 2270 2278 "ExtendedStatement.ml" 73 2270 2284
type(
  string
)
"ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 73 2270 2285
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 73 2270 2285
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 73 2270 2285
)
"ExtendedStatement.ml" 73 2270 2286 "ExtendedStatement.ml" 73 2270 2288
type(
  'g
)
ident(
  def e "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 73 2270 2288 "ExtendedStatement.ml" 73 2270 2292
type(
  ('a, 'g, 'c) Ostap.Combinators.parse
)
ident(
  int_ref expr "ExtendedStatement.ml" 72 2234 2257 "ExtendedStatement.ml" 72 2234 2261
)
"ExtendedStatement.ml" 73 2270 2293 "ExtendedStatement.ml" 73 2270 2296
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 73 2270 2297 "ExtendedStatement.ml" 73 2270 2301
type(
  string
)
"ExtendedStatement.ml" 73 2270 2293 "ExtendedStatement.ml" 73 2270 2302
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 73 2270 2293 "ExtendedStatement.ml" 73 2270 2302
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 73 2270 2293 "ExtendedStatement.ml" 73 2270 2302
)
"ExtendedStatement.ml" 74 2304 2311 "ExtendedStatement.ml" 74 2304 2320
type(
  ('j list * 'h list) list
)
ident(
  def branches "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 74 2304 2320 "ExtendedStatement.ml" 74 2304 2326
type(
  ('a, 'b, 'c) Ostap.Combinators.parse ->
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse ->
  'a -> ('a, ('j list * 'h list) list, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Ostap.Util.listBy
)
"ExtendedStatement.ml" 74 2304 2333 "ExtendedStatement.ml" 74 2304 2336
call(
  tail
)
type(
  'a -> ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  string
)
type(
  string -> ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2333 "ExtendedStatement.ml" 74 2304 2336
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2333 "ExtendedStatement.ml" 74 2304 2336
)
"ExtendedStatement.ml" 74 2304 2327 "ExtendedStatement.ml" 74 2304 2337
type(
  ('a, 'b, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2327 "ExtendedStatement.ml" 74 2304 2337
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2327 "ExtendedStatement.ml" 74 2304 2337
)
"ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2358
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
ident(
  int_ref caseCondition "ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 74 2304 2359 "ExtendedStatement.ml" 74 2304 2364
type(
  ('a, 'f, 'c) Ostap.Combinators.parse
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 72 2234 2250 "ExtendedStatement.ml" 72 2234 2255
)
"ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2365
call(
  tail
)
type(
  ('a, 'j list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2365
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2365
)
"ExtendedStatement.ml" 74 2304 2367 "ExtendedStatement.ml" 74 2304 2370
call(
  tail
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  string
)
type(
  string -> ('a, 'b, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2367 "ExtendedStatement.ml" 74 2304 2370
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2367 "ExtendedStatement.ml" 74 2304 2370
)
"ExtendedStatement.ml" 74 2304 2371 "ExtendedStatement.ml" 74 2304 2375
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'h list, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.oseq
)
"ExtendedStatement.ml" 74 2304 2376 "ExtendedStatement.ml" 74 2304 2380
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  int_ref stmt "ExtendedStatement.ml" 72 2234 2263 "ExtendedStatement.ml" 72 2234 2267
)
"ExtendedStatement.ml" 74 2304 2371 "ExtendedStatement.ml" 74 2304 2381
call(
  tail
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2371 "ExtendedStatement.ml" 74 2304 2381
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2371 "ExtendedStatement.ml" 74 2304 2381
)
"ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2381
call(
  tail
)
call(
  tail
)
type(
  'j list -> ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
type(
  'b -> ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
type(
  'h list -> 'j list * 'h list
)
type(
  'j list * 'h list
)
type(
  'h list
)
ident(
  int_ref _0 "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2381
)
type(
  'j list
)
ident(
  int_ref _1 "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2381
)
type(
  'h list
)
ident(
  def _0 "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2381
)
type(
  'h list
)
type(
  ('h list -> 'j list * 'h list) ->
  ('a, 'h list, 'c) Ostap.Combinators.parse ->
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'b
)
type(
  ('a, 'b, 'c) Ostap.Combinators.parse ->
  ('b -> ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse) ->
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'j list
)
ident(
  def _1 "ExtendedStatement.ml" 74 2304 2345 "ExtendedStatement.ml" 74 2304 2381
)
type(
  'j list
)
type(
  ('a, 'j list, 'c) Ostap.Combinators.parse ->
  ('j list -> ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse) ->
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 74 2304 2339 "ExtendedStatement.ml" 74 2304 2382
call(
  tail
)
type(
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'j list * 'h list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2339 "ExtendedStatement.ml" 74 2304 2382
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2339 "ExtendedStatement.ml" 74 2304 2382
)
"ExtendedStatement.ml" 74 2304 2320 "ExtendedStatement.ml" 74 2304 2383
call(
  tail
)
type(
  ('a, ('j list * 'h list) list, 'c) Ostap.Combinators.parse
)
type(
  ('a, ('j list * 'h list) list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 74 2304 2320 "ExtendedStatement.ml" 74 2304 2383
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 74 2304 2320 "ExtendedStatement.ml" 74 2304 2383
)
"ExtendedStatement.ml" 75 2384 2391 "ExtendedStatement.ml" 75 2384 2400
type(
  'h list option
)
ident(
  def elsePart "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 75 2384 2402 "ExtendedStatement.ml" 75 2384 2405
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 75 2384 2406 "ExtendedStatement.ml" 75 2384 2412
type(
  string
)
"ExtendedStatement.ml" 75 2384 2402 "ExtendedStatement.ml" 75 2384 2413
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 75 2384 2402 "ExtendedStatement.ml" 75 2384 2413
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 75 2384 2402 "ExtendedStatement.ml" 75 2384 2413
)
"ExtendedStatement.ml" 75 2384 2414 "ExtendedStatement.ml" 75 2384 2418
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'h list, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.oseq
)
"ExtendedStatement.ml" 75 2384 2419 "ExtendedStatement.ml" 75 2384 2423
type(
  ('a, 'h, 'c) Ostap.Combinators.parse
)
ident(
  int_ref stmt "ExtendedStatement.ml" 72 2234 2263 "ExtendedStatement.ml" 72 2234 2267
)
"ExtendedStatement.ml" 75 2384 2414 "ExtendedStatement.ml" 75 2384 2424
call(
  tail
)
type(
  'a -> ('a, 'h list, 'c) Ostap.Combinators.result
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 75 2384 2414 "ExtendedStatement.ml" 75 2384 2424
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 75 2384 2414 "ExtendedStatement.ml" 75 2384 2424
)
"ExtendedStatement.ml" 75 2384 2401 "ExtendedStatement.ml" 75 2384 2424
call(
  stack
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.parse
)
type(
  'd -> ('a, 'h list, 'c) Ostap.Combinators.parse
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'h list, 'c) Ostap.Combinators.parse) ->
  ('a, 'h list, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 75 2384 2400 "ExtendedStatement.ml" 75 2384 2426
call(
  stack
)
type(
  ('a, 'h list option, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'h list, 'c) Ostap.Combinators.parse ->
  ('a, 'h list option, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"ExtendedStatement.ml" 76 2427 2431 "ExtendedStatement.ml" 76 2427 2434
type(
  string -> 'a -> ('a, 'd, 'c) Ostap.Combinators.result
)
ident(
  ext_ref Common.key
)
"ExtendedStatement.ml" 76 2427 2435 "ExtendedStatement.ml" 76 2427 2440
type(
  string
)
"ExtendedStatement.ml" 76 2427 2431 "ExtendedStatement.ml" 76 2427 2441
call(
  tail
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'd, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 76 2427 2431 "ExtendedStatement.ml" 76 2427 2441
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 76 2427 2431 "ExtendedStatement.ml" 76 2427 2441
)
"ExtendedStatement.ml" 77 2444 2455 "ExtendedStatement.ml" 77 2444 2456
type(
  'g
)
ident(
  int_ref e "ExtendedStatement.ml" 73 2270 2286 "ExtendedStatement.ml" 73 2270 2288
)
"ExtendedStatement.ml" 77 2444 2458 "ExtendedStatement.ml" 77 2444 2466
type(
  ('j list * 'h list) list
)
ident(
  int_ref branches "ExtendedStatement.ml" 74 2304 2311 "ExtendedStatement.ml" 74 2304 2320
)
"ExtendedStatement.ml" 77 2444 2468 "ExtendedStatement.ml" 77 2444 2475
type(
  'h list option -> 'h list
)
ident(
  ext_ref Common.listify
)
"ExtendedStatement.ml" 77 2444 2476 "ExtendedStatement.ml" 77 2444 2484
type(
  'h list option
)
ident(
  int_ref elsePart "ExtendedStatement.ml" 75 2384 2391 "ExtendedStatement.ml" 75 2384 2400
)
"ExtendedStatement.ml" 77 2444 2468 "ExtendedStatement.ml" 77 2444 2484
call(
  stack
)
type(
  'h list
)
"ExtendedStatement.ml" 77 2444 2454 "ExtendedStatement.ml" 77 2444 2485
type(
  'g * ('j list * 'h list) list * 'h list
)
"ExtendedStatement.ml" 77 2444 2448 "ExtendedStatement.ml" 77 2444 2485
type(
  'i
)
"ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  'd -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'g -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'd -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('j list * 'h list) list -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'h list option -> ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  ('a, 'i, 'c) Ostap.Combinators.parse
)
type(
  'd -> 'i
)
type(
  'd
)
ident(
  def _0 "ExtendedStatement.ml" 77 2444 2448 "ExtendedStatement.ml" 77 2444 2485
)
type(
  'd
)
type(
  ('d -> 'i) ->
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h list option
)
ident(
  def _1 "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
type(
  ('a, 'h list option, 'c) Ostap.Combinators.parse ->
  ('h list option -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  ('j list * 'h list) list
)
ident(
  def _2 "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
type(
  ('a, ('j list * 'h list) list, 'c) Ostap.Combinators.parse ->
  (('j list * 'h list) list -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'd
)
ident(
  def _3 "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
ident(
  def _4 "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('g -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'd
)
ident(
  def _5 "ExtendedStatement.ml" 73 2270 2274 "ExtendedStatement.ml" 78 2486 2489
)
type(
  'd
)
type(
  ('a, 'd, 'c) Ostap.Combinators.parse ->
  ('d -> ('a, 'i, 'c) Ostap.Combinators.parse) ->
  ('a, 'i, 'c) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
call(
  tail
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  ('a, 'i, 'c) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
)
type(
  'a
)
ident(
  def _ostap_stream "ExtendedStatement.ml" 72 2234 2236 "ExtendedStatement.ml" 78 2486 2489
)
"ExtendedStatement.ml" 58 1764 1766 "ExtendedStatement.ml" 78 2486 2489
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
ident(
  def caseStatement "ExtendedStatement.ml" 57 1756 1756 "ExtendedStatement.ml" 1 0 -1
)
type(
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'j list, 'c) Ostap.Combinators.result
)
ident(
  def caseCondition "ExtendedStatement.ml" 57 1756 1756 "ExtendedStatement.ml" 1 0 -1
)
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
ident(
  def forStatement "ExtendedStatement.ml" 57 1756 1756 "ExtendedStatement.ml" 1 0 -1
)
type(
  ('a, 'e, 'c) Ostap.Combinators.parse ->
  ('a, 'f, 'c) Ostap.Combinators.parse ->
  ('a, 'g, 'c) Ostap.Combinators.parse ->
  ('a, 'h, 'c) Ostap.Combinators.parse ->
  'a -> ('a, 'i, 'c) Ostap.Combinators.result
)
ident(
  def parse "ExtendedStatement.ml" 57 1756 1756 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 85 2602 2606 "ExtendedStatement.ml" 85 2602 2611
type(
  ('a -> Ostap.Pretty.printer Monad.Id.t) ->
  ((([> `Case of
          'a *
          ([< `Atom of 'a | `Interval of 'a * 'a ] list * 'b list) list *
          'b list
      | `For of 'a * 'a * 'a * 'a option * 'b list ]
     as 'b) ->
    Ostap.Pretty.printer Monad.Id.t) ->
   'b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  def print "ExtendedStatement.ml" 121 3734 3734 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 85 2602 2612 "ExtendedStatement.ml" 85 2602 2616
type(
  'a -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  def expr "ExtendedStatement.ml" 85 2602 2617 "ExtendedStatement.ml" 117 3613 3642
)
"ExtendedStatement.ml" 85 2602 2617 "ExtendedStatement.ml" 85 2602 2620
type(
  ('b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  def ext "ExtendedStatement.ml" 85 2602 2621 "ExtendedStatement.ml" 117 3613 3642
)
"ExtendedStatement.ml" 85 2602 2621 "ExtendedStatement.ml" 85 2602 2625
type(
  'b
)
ident(
  def stmt "ExtendedStatement.ml" 86 2628 2630 "ExtendedStatement.ml" 117 3613 3642
)
"ExtendedStatement.ml" 86 2628 2630 "ExtendedStatement.ml" 86 2628 2634
type(
  < case : 'b ->
           Ostap.Pretty.printer ->
           ([ `Atom of Ostap.Pretty.printer
            | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
            Ostap.Pretty.printer list)
           list ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t;
    forc : 'b ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer option ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t > ->
  ('a -> Ostap.Pretty.printer Monad.Id.t) ->
  ('a -> Ostap.Pretty.printer Monad.Id.t) ->
  ('a -> Ostap.Pretty.printer Monad.Id.t) ->
  (('b -> Ostap.Pretty.printer Monad.Id.t) ->
   'b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  int_ref imap "ExtendedStatement.ml" 42 1257 1261 "ExtendedStatement.ml" 42 1257 1265
)
"ExtendedStatement.ml" 88 2649 2668 "ExtendedStatement.ml" 88 2649 2669
type(
  'b
)
"ExtendedStatement.ml" 88 2649 2670 "ExtendedStatement.ml" 88 2649 2671
type(
  Ostap.Pretty.printer
)
ident(
  def i "ExtendedStatement.ml" 88 2649 2672 "ExtendedStatement.ml" 94 2894 2933
)
"ExtendedStatement.ml" 88 2649 2672 "ExtendedStatement.ml" 88 2649 2673
type(
  Ostap.Pretty.printer
)
ident(
  def l "ExtendedStatement.ml" 88 2649 2674 "ExtendedStatement.ml" 94 2894 2933
)
"ExtendedStatement.ml" 88 2649 2674 "ExtendedStatement.ml" 88 2649 2675
type(
  Ostap.Pretty.printer
)
ident(
  def u "ExtendedStatement.ml" 88 2649 2676 "ExtendedStatement.ml" 94 2894 2933
)
"ExtendedStatement.ml" 88 2649 2676 "ExtendedStatement.ml" 88 2649 2677
type(
  Ostap.Pretty.printer option
)
ident(
  def s "ExtendedStatement.ml" 88 2649 2678 "ExtendedStatement.ml" 94 2894 2933
)
"ExtendedStatement.ml" 88 2649 2678 "ExtendedStatement.ml" 88 2649 2679
type(
  Ostap.Pretty.printer list
)
ident(
  def b "ExtendedStatement.ml" 89 2683 2692 "ExtendedStatement.ml" 94 2894 2933
)
"ExtendedStatement.ml" 89 2683 2692 "ExtendedStatement.ml" 89 2683 2697
type(
  Ostap.Pretty.printer -> Ostap.Pretty.printer -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.plock
)
"ExtendedStatement.ml" 90 2699 2711 "ExtendedStatement.ml" 90 2699 2722
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.listBySpace
)
"ExtendedStatement.ml" 90 2699 2725 "ExtendedStatement.ml" 90 2699 2731
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 90 2699 2732 "ExtendedStatement.ml" 90 2699 2737
type(
  string
)
"ExtendedStatement.ml" 90 2699 2725 "ExtendedStatement.ml" 90 2699 2737
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 90 2699 2739 "ExtendedStatement.ml" 90 2699 2740
type(
  Ostap.Pretty.printer
)
ident(
  int_ref i "ExtendedStatement.ml" 88 2649 2670 "ExtendedStatement.ml" 88 2649 2671
)
"ExtendedStatement.ml" 90 2699 2742 "ExtendedStatement.ml" 90 2699 2748
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 90 2699 2749 "ExtendedStatement.ml" 90 2699 2753
type(
  string
)
"ExtendedStatement.ml" 90 2699 2742 "ExtendedStatement.ml" 90 2699 2753
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 90 2699 2755 "ExtendedStatement.ml" 90 2699 2756
type(
  Ostap.Pretty.printer
)
ident(
  int_ref l "ExtendedStatement.ml" 88 2649 2672 "ExtendedStatement.ml" 88 2649 2673
)
"ExtendedStatement.ml" 90 2699 2758 "ExtendedStatement.ml" 90 2699 2764
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 90 2699 2765 "ExtendedStatement.ml" 90 2699 2769
type(
  string
)
"ExtendedStatement.ml" 90 2699 2758 "ExtendedStatement.ml" 90 2699 2769
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 90 2699 2771 "ExtendedStatement.ml" 90 2699 2772
type(
  Ostap.Pretty.printer
)
ident(
  int_ref u "ExtendedStatement.ml" 88 2649 2674 "ExtendedStatement.ml" 88 2649 2675
)
"ExtendedStatement.ml" 90 2699 2724 "ExtendedStatement.ml" 90 2699 2773
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 91 2777 2808 "ExtendedStatement.ml" 91 2777 2809
type(
  Ostap.Pretty.printer option
)
ident(
  int_ref s "ExtendedStatement.ml" 88 2649 2676 "ExtendedStatement.ml" 88 2649 2677
)
"ExtendedStatement.ml" 91 2777 2815 "ExtendedStatement.ml" 91 2777 2819
type(
  Ostap.Pretty.printer option
)
"ExtendedStatement.ml" 91 2777 2823 "ExtendedStatement.ml" 91 2777 2825
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 91 2777 2833 "ExtendedStatement.ml" 91 2777 2834
type(
  Ostap.Pretty.printer
)
ident(
  def s "ExtendedStatement.ml" 91 2777 2838 "ExtendedStatement.ml" 91 2777 2854
)
"ExtendedStatement.ml" 91 2777 2828 "ExtendedStatement.ml" 91 2777 2834
type(
  Ostap.Pretty.printer option
)
"ExtendedStatement.ml" 91 2777 2839 "ExtendedStatement.ml" 91 2777 2845
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 91 2777 2846 "ExtendedStatement.ml" 91 2777 2850
type(
  string
)
"ExtendedStatement.ml" 91 2777 2839 "ExtendedStatement.ml" 91 2777 2850
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 91 2777 2852 "ExtendedStatement.ml" 91 2777 2853
type(
  Ostap.Pretty.printer
)
ident(
  int_ref s "ExtendedStatement.ml" 91 2777 2833 "ExtendedStatement.ml" 91 2777 2834
)
"ExtendedStatement.ml" 91 2777 2838 "ExtendedStatement.ml" 91 2777 2854
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 91 2777 2802 "ExtendedStatement.ml" 91 2777 2854
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 90 2699 2724 "ExtendedStatement.ml" 91 2777 2854
type(
  Ostap.Pretty.printer list ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer list
)
ident(
  ext_ref Pervasives.( @ )
)
"ExtendedStatement.ml" 90 2699 2723 "ExtendedStatement.ml" 92 2855 2880
call(
  stack
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 90 2699 2710 "ExtendedStatement.ml" 93 2881 2893
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 94 2894 2906 "ExtendedStatement.ml" 94 2894 2912
type(
  string -> string -> Ostap.Pretty.printer -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.sblock
)
"ExtendedStatement.ml" 94 2894 2913 "ExtendedStatement.ml" 94 2894 2917
type(
  string
)
"ExtendedStatement.ml" 94 2894 2918 "ExtendedStatement.ml" 94 2894 2923
type(
  string
)
"ExtendedStatement.ml" 94 2894 2925 "ExtendedStatement.ml" 94 2894 2929
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.pseq
)
"ExtendedStatement.ml" 94 2894 2930 "ExtendedStatement.ml" 94 2894 2931
type(
  Ostap.Pretty.printer list
)
ident(
  int_ref b "ExtendedStatement.ml" 88 2649 2678 "ExtendedStatement.ml" 88 2649 2679
)
"ExtendedStatement.ml" 94 2894 2924 "ExtendedStatement.ml" 94 2894 2932
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 94 2894 2905 "ExtendedStatement.ml" 94 2894 2933
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 89 2683 2692 "ExtendedStatement.ml" 94 2894 2933
call(
  tail
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 88 2649 2678 "ExtendedStatement.ml" 94 2894 2933
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
"ExtendedStatement.ml" 88 2649 2676 "ExtendedStatement.ml" 94 2894 2933
type(
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 88 2649 2674 "ExtendedStatement.ml" 94 2894 2933
type(
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 88 2649 2672 "ExtendedStatement.ml" 94 2894 2933
type(
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 88 2649 2670 "ExtendedStatement.ml" 94 2894 2933
type(
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 88 2649 2668 "ExtendedStatement.ml" 94 2894 2933
type(
  'b ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
type(
  'b ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 88 2649 2656 "ExtendedStatement.ml" 94 2894 2933
type(
  < case : 'b ->
           Ostap.Pretty.printer ->
           ([ `Atom of Ostap.Pretty.printer
            | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
            Ostap.Pretty.printer list)
           list ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t;
    forc : 'b ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer option ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t > ->
  'b ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer option ->
  Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 95 2934 2953 "ExtendedStatement.ml" 95 2934 2954
type(
  'b
)
"ExtendedStatement.ml" 95 2934 2955 "ExtendedStatement.ml" 95 2934 2956
type(
  Ostap.Pretty.printer
)
ident(
  def e "ExtendedStatement.ml" 95 2934 2957 "ExtendedStatement.ml" 115 3591 3603
)
"ExtendedStatement.ml" 95 2934 2957 "ExtendedStatement.ml" 95 2934 2958
type(
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list
)
ident(
  def b "ExtendedStatement.ml" 95 2934 2959 "ExtendedStatement.ml" 115 3591 3603
)
"ExtendedStatement.ml" 95 2934 2959 "ExtendedStatement.ml" 95 2934 2967
type(
  Ostap.Pretty.printer list
)
ident(
  def elsePart "ExtendedStatement.ml" 96 2970 2979 "ExtendedStatement.ml" 115 3591 3603
)
"ExtendedStatement.ml" 96 2970 2983 "ExtendedStatement.ml" 96 2970 2991
type(
  [< `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ]
  list -> Ostap.Pretty.printer
)
ident(
  def caseCond "ExtendedStatement.ml" 106 3239 3248 "ExtendedStatement.ml" 115 3591 3603
)
"ExtendedStatement.ml" 96 2970 2992 "ExtendedStatement.ml" 96 2970 2993
type(
  ([< `Atom of Ostap.Pretty.printer
    | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ]
   as 'c)
  list
)
ident(
  def c "ExtendedStatement.ml" 97 2996 3007 "ExtendedStatement.ml" 104 3214 3226
)
"ExtendedStatement.ml" 97 2996 3007 "ExtendedStatement.ml" 97 2996 3010
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.hov
)
"ExtendedStatement.ml" 98 3013 3026 "ExtendedStatement.ml" 98 3013 3042
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.listByCommaBreak
)
"ExtendedStatement.ml" 99 3044 3060 "ExtendedStatement.ml" 99 3044 3063
type(
  ('c -> Ostap.Pretty.printer) -> 'c list -> Ostap.Pretty.printer list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 100 3065 3098 "ExtendedStatement.ml" 100 3065 3099
type(
  Ostap.Pretty.printer
)
ident(
  def c "ExtendedStatement.ml" 100 3065 3103 "ExtendedStatement.ml" 100 3065 3104
)
"ExtendedStatement.ml" 100 3065 3092 "ExtendedStatement.ml" 100 3065 3099
type(
  'c
)
"ExtendedStatement.ml" 100 3065 3103 "ExtendedStatement.ml" 100 3065 3104
type(
  Ostap.Pretty.printer
)
ident(
  int_ref c "ExtendedStatement.ml" 100 3065 3098 "ExtendedStatement.ml" 100 3065 3099
)
"ExtendedStatement.ml" 100 3065 3118 "ExtendedStatement.ml" 100 3065 3119
type(
  Ostap.Pretty.printer
)
ident(
  def x "ExtendedStatement.ml" 100 3065 3127 "ExtendedStatement.ml" 100 3065 3150
)
"ExtendedStatement.ml" 100 3065 3121 "ExtendedStatement.ml" 100 3065 3122
type(
  Ostap.Pretty.printer
)
ident(
  def y "ExtendedStatement.ml" 100 3065 3127 "ExtendedStatement.ml" 100 3065 3150
)
"ExtendedStatement.ml" 100 3065 3118 "ExtendedStatement.ml" 100 3065 3122
type(
  Ostap.Pretty.printer * Ostap.Pretty.printer
)
"ExtendedStatement.ml" 100 3065 3107 "ExtendedStatement.ml" 100 3065 3123
type(
  'c
)
"ExtendedStatement.ml" 100 3065 3127 "ExtendedStatement.ml" 100 3065 3130
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.hov
)
"ExtendedStatement.ml" 100 3065 3132 "ExtendedStatement.ml" 100 3065 3133
type(
  Ostap.Pretty.printer
)
ident(
  int_ref x "ExtendedStatement.ml" 100 3065 3118 "ExtendedStatement.ml" 100 3065 3119
)
"ExtendedStatement.ml" 100 3065 3135 "ExtendedStatement.ml" 100 3065 3141
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 100 3065 3142 "ExtendedStatement.ml" 100 3065 3146
type(
  string
)
"ExtendedStatement.ml" 100 3065 3135 "ExtendedStatement.ml" 100 3065 3146
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 100 3065 3148 "ExtendedStatement.ml" 100 3065 3149
type(
  Ostap.Pretty.printer
)
ident(
  int_ref y "ExtendedStatement.ml" 100 3065 3121 "ExtendedStatement.ml" 100 3065 3122
)
"ExtendedStatement.ml" 100 3065 3131 "ExtendedStatement.ml" 100 3065 3150
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 100 3065 3127 "ExtendedStatement.ml" 100 3065 3150
call(
  tail
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 100 3065 3082 "ExtendedStatement.ml" 100 3065 3151
type(
  'c -> Ostap.Pretty.printer
)
"ExtendedStatement.ml" 101 3153 3170 "ExtendedStatement.ml" 101 3153 3171
type(
  'c list
)
ident(
  int_ref c "ExtendedStatement.ml" 96 2970 2992 "ExtendedStatement.ml" 96 2970 2993
)
"ExtendedStatement.ml" 99 3044 3059 "ExtendedStatement.ml" 102 3172 3188
call(
  stack
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 98 3013 3026 "ExtendedStatement.ml" 102 3172 3188
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 103 3190 3203 "ExtendedStatement.ml" 103 3190 3209
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 103 3190 3210 "ExtendedStatement.ml" 103 3190 3213
type(
  string
)
"ExtendedStatement.ml" 103 3190 3203 "ExtendedStatement.ml" 103 3190 3213
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 97 2996 3011 "ExtendedStatement.ml" 104 3214 3226
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 97 2996 3007 "ExtendedStatement.ml" 104 3214 3226
call(
  tail
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 96 2970 2992 "ExtendedStatement.ml" 104 3214 3226
type(
  'c list -> Ostap.Pretty.printer
)
"ExtendedStatement.ml" 106 3239 3248 "ExtendedStatement.ml" 106 3239 3253
type(
  Ostap.Pretty.printer ->
  Ostap.Pretty.printer -> Ostap.Pretty.printer -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.block
)
"ExtendedStatement.ml" 107 3255 3267 "ExtendedStatement.ml" 107 3255 3278
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.listBySpace
)
"ExtendedStatement.ml" 107 3255 3279 "ExtendedStatement.ml" 107 3255 3285
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 107 3255 3286 "ExtendedStatement.ml" 107 3255 3292
type(
  string
)
"ExtendedStatement.ml" 107 3255 3279 "ExtendedStatement.ml" 107 3255 3292
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 107 3255 3294 "ExtendedStatement.ml" 107 3255 3295
type(
  Ostap.Pretty.printer
)
ident(
  int_ref e "ExtendedStatement.ml" 95 2934 2955 "ExtendedStatement.ml" 95 2934 2956
)
"ExtendedStatement.ml" 107 3255 3297 "ExtendedStatement.ml" 107 3255 3303
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 107 3255 3304 "ExtendedStatement.ml" 107 3255 3308
type(
  string
)
"ExtendedStatement.ml" 107 3255 3297 "ExtendedStatement.ml" 107 3255 3308
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 107 3255 3278 "ExtendedStatement.ml" 107 3255 3309
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 107 3255 3266 "ExtendedStatement.ml" 107 3255 3310
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 108 3312 3324 "ExtendedStatement.ml" 108 3312 3330
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 108 3312 3331 "ExtendedStatement.ml" 108 3312 3336
type(
  string
)
"ExtendedStatement.ml" 108 3312 3323 "ExtendedStatement.ml" 108 3312 3337
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 109 3339 3351 "ExtendedStatement.ml" 109 3339 3355
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.vert
)
"ExtendedStatement.ml" 110 3358 3372 "ExtendedStatement.ml" 110 3358 3378
type(
  Ostap.Pretty.printer -> Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.listBy
)
"ExtendedStatement.ml" 111 3380 3397 "ExtendedStatement.ml" 111 3380 3400
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.seq
)
"ExtendedStatement.ml" 111 3380 3401 "ExtendedStatement.ml" 111 3380 3407
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 111 3380 3408 "ExtendedStatement.ml" 111 3380 3412
type(
  string
)
"ExtendedStatement.ml" 111 3380 3401 "ExtendedStatement.ml" 111 3380 3412
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 111 3380 3414 "ExtendedStatement.ml" 111 3380 3419
type(
  Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.break
)
"ExtendedStatement.ml" 111 3380 3400 "ExtendedStatement.ml" 111 3380 3420
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 111 3380 3396 "ExtendedStatement.ml" 111 3380 3421
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 112 3423 3440 "ExtendedStatement.ml" 112 3423 3443
type(
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list -> Ostap.Pretty.printer) ->
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 112 3423 3450 "ExtendedStatement.ml" 112 3423 3451
type(
  [ `Atom of Ostap.Pretty.printer
  | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list
)
ident(
  def c "ExtendedStatement.ml" 112 3423 3459 "ExtendedStatement.ml" 112 3423 3486
)
"ExtendedStatement.ml" 112 3423 3453 "ExtendedStatement.ml" 112 3423 3454
type(
  Ostap.Pretty.printer list
)
ident(
  def s "ExtendedStatement.ml" 112 3423 3459 "ExtendedStatement.ml" 112 3423 3486
)
"ExtendedStatement.ml" 112 3423 3450 "ExtendedStatement.ml" 112 3423 3454
type(
  [ `Atom of Ostap.Pretty.printer
  | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 112 3423 3459 "ExtendedStatement.ml" 112 3423 3464
type(
  Ostap.Pretty.printer -> Ostap.Pretty.printer -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.plock
)
"ExtendedStatement.ml" 112 3423 3466 "ExtendedStatement.ml" 112 3423 3474
type(
  [ `Atom of Ostap.Pretty.printer
  | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list ->
  Ostap.Pretty.printer
)
ident(
  int_ref caseCond "ExtendedStatement.ml" 96 2970 2983 "ExtendedStatement.ml" 96 2970 2991
)
"ExtendedStatement.ml" 112 3423 3475 "ExtendedStatement.ml" 112 3423 3476
type(
  [ `Atom of Ostap.Pretty.printer
  | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list
)
ident(
  int_ref c "ExtendedStatement.ml" 112 3423 3450 "ExtendedStatement.ml" 112 3423 3451
)
"ExtendedStatement.ml" 112 3423 3465 "ExtendedStatement.ml" 112 3423 3477
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 112 3423 3479 "ExtendedStatement.ml" 112 3423 3483
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.pseq
)
"ExtendedStatement.ml" 112 3423 3484 "ExtendedStatement.ml" 112 3423 3485
type(
  Ostap.Pretty.printer list
)
ident(
  int_ref s "ExtendedStatement.ml" 112 3423 3453 "ExtendedStatement.ml" 112 3423 3454
)
"ExtendedStatement.ml" 112 3423 3478 "ExtendedStatement.ml" 112 3423 3486
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 112 3423 3459 "ExtendedStatement.ml" 112 3423 3486
call(
  tail
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 112 3423 3444 "ExtendedStatement.ml" 112 3423 3487
type(
  [ `Atom of Ostap.Pretty.printer
  | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
"ExtendedStatement.ml" 112 3423 3488 "ExtendedStatement.ml" 112 3423 3489
type(
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list
)
ident(
  int_ref b "ExtendedStatement.ml" 95 2934 2957 "ExtendedStatement.ml" 95 2934 2958
)
"ExtendedStatement.ml" 112 3423 3439 "ExtendedStatement.ml" 112 3423 3490
call(
  stack
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 110 3358 3372 "ExtendedStatement.ml" 112 3423 3490
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 113 3492 3512 "ExtendedStatement.ml" 113 3492 3520
type(
  Ostap.Pretty.printer list
)
ident(
  int_ref elsePart "ExtendedStatement.ml" 95 2934 2959 "ExtendedStatement.ml" 95 2934 2967
)
"ExtendedStatement.ml" 113 3492 3526 "ExtendedStatement.ml" 113 3492 3528
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 113 3492 3532 "ExtendedStatement.ml" 113 3492 3537
type(
  Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.empty
)
"ExtendedStatement.ml" 113 3492 3540 "ExtendedStatement.ml" 113 3492 3541
type(
  Ostap.Pretty.printer list
)
ident(
  def s "ExtendedStatement.ml" 113 3492 3545 "ExtendedStatement.ml" 113 3492 3576
)
"ExtendedStatement.ml" 113 3492 3545 "ExtendedStatement.ml" 113 3492 3550
type(
  Ostap.Pretty.printer -> Ostap.Pretty.printer -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.plock
)
"ExtendedStatement.ml" 113 3492 3552 "ExtendedStatement.ml" 113 3492 3558
type(
  string -> Ostap.Pretty.printer
)
ident(
  ext_ref Ostap.Pretty.string
)
"ExtendedStatement.ml" 113 3492 3559 "ExtendedStatement.ml" 113 3492 3566
type(
  string
)
"ExtendedStatement.ml" 113 3492 3551 "ExtendedStatement.ml" 113 3492 3567
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 113 3492 3569 "ExtendedStatement.ml" 113 3492 3573
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
ident(
  ext_ref Common.pseq
)
"ExtendedStatement.ml" 113 3492 3574 "ExtendedStatement.ml" 113 3492 3575
type(
  Ostap.Pretty.printer list
)
ident(
  int_ref s "ExtendedStatement.ml" 113 3492 3540 "ExtendedStatement.ml" 113 3492 3541
)
"ExtendedStatement.ml" 113 3492 3568 "ExtendedStatement.ml" 113 3492 3576
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 113 3492 3545 "ExtendedStatement.ml" 113 3492 3576
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 113 3492 3506 "ExtendedStatement.ml" 113 3492 3576
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 109 3339 3356 "ExtendedStatement.ml" 114 3577 3590
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
type(
  Ostap.Pretty.printer list
)
"ExtendedStatement.ml" 109 3339 3350 "ExtendedStatement.ml" 115 3591 3603
call(
  stack
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 106 3239 3248 "ExtendedStatement.ml" 115 3591 3603
call(
  tail
)
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 96 2970 2979 "ExtendedStatement.ml" 115 3591 3603
type(
  Ostap.Pretty.printer
)
"ExtendedStatement.ml" 95 2934 2959 "ExtendedStatement.ml" 115 3591 3603
type(
  Ostap.Pretty.printer list -> Ostap.Pretty.printer
)
"ExtendedStatement.ml" 95 2934 2957 "ExtendedStatement.ml" 115 3591 3603
type(
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 95 2934 2955 "ExtendedStatement.ml" 115 3591 3603
type(
  Ostap.Pretty.printer ->
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 95 2934 2953 "ExtendedStatement.ml" 115 3591 3603
type(
  'b ->
  Ostap.Pretty.printer ->
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
type(
  'b ->
  Ostap.Pretty.printer ->
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 95 2934 2941 "ExtendedStatement.ml" 115 3591 3603
type(
  < case : 'b ->
           Ostap.Pretty.printer ->
           ([ `Atom of Ostap.Pretty.printer
            | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
            Ostap.Pretty.printer list)
           list ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t;
    forc : 'b ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer option ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t > ->
  'b ->
  Ostap.Pretty.printer ->
  ([ `Atom of Ostap.Pretty.printer
   | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
   Ostap.Pretty.printer list)
  list -> Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 87 2637 2641 "ExtendedStatement.ml" 117 3613 3618
type(
  < case : 'b ->
           Ostap.Pretty.printer ->
           ([ `Atom of Ostap.Pretty.printer
            | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
            Ostap.Pretty.printer list)
           list ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t;
    forc : 'b ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer option ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t >
)
type(
  < case : 'b ->
           Ostap.Pretty.printer ->
           ([ `Atom of Ostap.Pretty.printer
            | `Interval of Ostap.Pretty.printer * Ostap.Pretty.printer ] list *
            Ostap.Pretty.printer list)
           list ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t;
    forc : 'b ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer ->
           Ostap.Pretty.printer option ->
           Ostap.Pretty.printer list -> Ostap.Pretty.printer Monad.Id.t >
)
"ExtendedStatement.ml" 117 3613 3619 "ExtendedStatement.ml" 117 3613 3623
type(
  'a -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 85 2602 2612 "ExtendedStatement.ml" 85 2602 2616
)
"ExtendedStatement.ml" 117 3613 3624 "ExtendedStatement.ml" 117 3613 3628
type(
  'a -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 85 2602 2612 "ExtendedStatement.ml" 85 2602 2616
)
"ExtendedStatement.ml" 117 3613 3629 "ExtendedStatement.ml" 117 3613 3633
type(
  'a -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 85 2602 2612 "ExtendedStatement.ml" 85 2602 2616
)
"ExtendedStatement.ml" 117 3613 3634 "ExtendedStatement.ml" 117 3613 3637
type(
  ('b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 85 2602 2617 "ExtendedStatement.ml" 85 2602 2620
)
"ExtendedStatement.ml" 117 3613 3638 "ExtendedStatement.ml" 117 3613 3642
type(
  'b
)
ident(
  int_ref stmt "ExtendedStatement.ml" 85 2602 2621 "ExtendedStatement.ml" 85 2602 2625
)
"ExtendedStatement.ml" 86 2628 2630 "ExtendedStatement.ml" 117 3613 3642
call(
  tail
)
type(
  Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 85 2602 2621 "ExtendedStatement.ml" 117 3613 3642
type(
  'b -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 85 2602 2617 "ExtendedStatement.ml" 117 3613 3642
type(
  (('b -> Ostap.Pretty.printer Monad.Id.t) ->
   'b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 85 2602 2612 "ExtendedStatement.ml" 117 3613 3642
type(
  ('a -> Ostap.Pretty.printer Monad.Id.t) ->
  (('b -> Ostap.Pretty.printer Monad.Id.t) ->
   'b -> Ostap.Pretty.printer Monad.Id.t) ->
  'b -> Ostap.Pretty.printer Monad.Id.t
)
"ExtendedStatement.ml" 123 3748 3752 "ExtendedStatement.ml" 123 3748 3759
type(
  ('a -> 'b Monad.Checked.t) ->
  ('c -> 'd Monad.Checked.t) ->
  ('e -> 'b Monad.Checked.t) ->
  ((([> `Case of
          'e *
          ([< `Atom of 'c | `Interval of 'c * 'c ] list * 'f list) list *
          'f list
      | `For of 'a * 'e * 'e * 'c option * 'f list ]
     as 'f) ->
    ([> `Case of
          'b *
          ([> `Atom of 'd | `Interval of 'd * 'd ] list * 'g list) list *
          'g list
      | `For of 'b * 'b * 'b * 'd option * 'g list ]
     as 'g)
    Monad.Checked.t) ->
   'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
ident(
  def resolve "ExtendedStatement.ml" 129 3992 3992 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 123 3748 3760 "ExtendedStatement.ml" 123 3748 3763
type(
  'a -> 'b Monad.Checked.t
)
ident(
  def ref "ExtendedStatement.ml" 123 3748 3764 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 123 3748 3764 "ExtendedStatement.ml" 123 3748 3769
type(
  'c -> 'd Monad.Checked.t
)
ident(
  def cexpr "ExtendedStatement.ml" 123 3748 3770 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 123 3748 3770 "ExtendedStatement.ml" 123 3748 3774
type(
  'e -> 'b Monad.Checked.t
)
ident(
  def expr "ExtendedStatement.ml" 123 3748 3775 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 123 3748 3775 "ExtendedStatement.ml" 123 3748 3778
type(
  ('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t
)
ident(
  def ext "ExtendedStatement.ml" 123 3748 3779 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 123 3748 3779 "ExtendedStatement.ml" 123 3748 3783
type(
  'f
)
ident(
  def stmt "ExtendedStatement.ml" 124 3786 3788 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 124 3786 3792 "ExtendedStatement.ml" 124 3786 3797
type(
  'h -> 'i -> 'i
)
ident(
  def reloc "ExtendedStatement.ml" 125 3829 3831 "ExtendedStatement.ml" 125 3829 3900
)
"ExtendedStatement.ml" 124 3786 3798 "ExtendedStatement.ml" 124 3786 3799
type(
  'h
)
ident(
  def x "ExtendedStatement.ml" 124 3786 3800 "ExtendedStatement.ml" 124 3786 3825
)
"ExtendedStatement.ml" 124 3786 3800 "ExtendedStatement.ml" 124 3786 3801
type(
  'i
)
ident(
  def y "ExtendedStatement.ml" 124 3786 3804 "ExtendedStatement.ml" 124 3786 3825
)
"ExtendedStatement.ml" 124 3786 3804 "ExtendedStatement.ml" 124 3786 3809
type(
  Ostap.Msg.Locator.t -> 'i -> 'i
)
ident(
  ext_ref Common.reloc
)
"ExtendedStatement.ml" 124 3786 3811 "ExtendedStatement.ml" 124 3786 3817
type(
  'f -> Ostap.Msg.Locator.t
)
ident(
  ext_ref Common.locate
)
"ExtendedStatement.ml" 124 3786 3818 "ExtendedStatement.ml" 124 3786 3822
type(
  'f
)
ident(
  int_ref stmt "ExtendedStatement.ml" 123 3748 3779 "ExtendedStatement.ml" 123 3748 3783
)
"ExtendedStatement.ml" 124 3786 3810 "ExtendedStatement.ml" 124 3786 3823
call(
  stack
)
type(
  Ostap.Msg.Locator.t
)
"ExtendedStatement.ml" 124 3786 3824 "ExtendedStatement.ml" 124 3786 3825
type(
  'i
)
ident(
  int_ref y "ExtendedStatement.ml" 124 3786 3800 "ExtendedStatement.ml" 124 3786 3801
)
"ExtendedStatement.ml" 124 3786 3804 "ExtendedStatement.ml" 124 3786 3825
call(
  tail
)
type(
  'i
)
"ExtendedStatement.ml" 124 3786 3800 "ExtendedStatement.ml" 124 3786 3825
type(
  'i -> 'i
)
"ExtendedStatement.ml" 124 3786 3798 "ExtendedStatement.ml" 124 3786 3825
type(
  'h -> 'i -> 'i
)
"ExtendedStatement.ml" 125 3829 3831 "ExtendedStatement.ml" 125 3829 3835
type(
  < case : 'f ->
           'b ->
           (([> `Atom of 'd | `Interval of 'd * 'd ] as 'j) list * 'g list)
           list -> 'g list -> 'g Monad.Checked.t;
    forc : 'f -> 'b -> 'b -> 'b -> 'd option -> 'g list -> 'g Monad.Checked.t > ->
  ('a -> 'b Monad.Checked.t) ->
  ('c -> 'd Monad.Checked.t) ->
  ('e -> 'b Monad.Checked.t) ->
  (('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
ident(
  int_ref cmap "ExtendedStatement.ml" 46 1368 1372 "ExtendedStatement.ml" 46 1368 1376
)
"ExtendedStatement.ml" 125 3829 3837 "ExtendedStatement.ml" 125 3829 3841
type(
  ('f -> 'g -> 'g Monad.Checked.t) ->
  < case : 'f ->
           'b -> ('j list * 'g list) list -> 'g list -> 'g Monad.Checked.t;
    forc : 'f -> 'b -> 'b -> 'b -> 'd option -> 'g list -> 'g Monad.Checked.t >
)
ident(
  int_ref mapT "ExtendedStatement.ml" 50 1484 1488 "ExtendedStatement.ml" 50 1484 1492
)
"ExtendedStatement.ml" 125 3829 3847 "ExtendedStatement.ml" 125 3829 3851
type(
  'f
)
ident(
  def stmt "ExtendedStatement.ml" 125 3829 3852 "ExtendedStatement.ml" 125 3829 3874
)
"ExtendedStatement.ml" 125 3829 3852 "ExtendedStatement.ml" 125 3829 3853
type(
  'g
)
ident(
  def s "ExtendedStatement.ml" 125 3829 3857 "ExtendedStatement.ml" 125 3829 3874
)
"ExtendedStatement.ml" 125 3829 3861 "ExtendedStatement.ml" 125 3829 3866
type(
  'f -> 'g -> 'g
)
ident(
  int_ref reloc "ExtendedStatement.ml" 124 3786 3792 "ExtendedStatement.ml" 124 3786 3797
)
"ExtendedStatement.ml" 125 3829 3867 "ExtendedStatement.ml" 125 3829 3871
type(
  'f
)
ident(
  int_ref stmt "ExtendedStatement.ml" 125 3829 3847 "ExtendedStatement.ml" 125 3829 3851
)
"ExtendedStatement.ml" 125 3829 3872 "ExtendedStatement.ml" 125 3829 3873
type(
  'g
)
ident(
  int_ref s "ExtendedStatement.ml" 125 3829 3852 "ExtendedStatement.ml" 125 3829 3853
)
"ExtendedStatement.ml" 125 3829 3860 "ExtendedStatement.ml" 125 3829 3874
call(
  stack
)
type(
  'g
)
"ExtendedStatement.ml" 125 3829 3857 "ExtendedStatement.ml" 125 3829 3874
call(
  tail
)
type(
  'g Monad.Checked.t
)
type(
  'g -> 'g Monad.Checked.t
)
ident(
  ext_ref Checked.( !! )
)
"ExtendedStatement.ml" 125 3829 3852 "ExtendedStatement.ml" 125 3829 3874
type(
  'g -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 125 3829 3842 "ExtendedStatement.ml" 125 3829 3875
type(
  'f -> 'g -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 125 3829 3836 "ExtendedStatement.ml" 125 3829 3876
call(
  stack
)
type(
  < case : 'f ->
           'b -> ('j list * 'g list) list -> 'g list -> 'g Monad.Checked.t;
    forc : 'f -> 'b -> 'b -> 'b -> 'd option -> 'g list -> 'g Monad.Checked.t >
)
"ExtendedStatement.ml" 125 3829 3877 "ExtendedStatement.ml" 125 3829 3880
type(
  'a -> 'b Monad.Checked.t
)
ident(
  int_ref ref "ExtendedStatement.ml" 123 3748 3760 "ExtendedStatement.ml" 123 3748 3763
)
"ExtendedStatement.ml" 125 3829 3881 "ExtendedStatement.ml" 125 3829 3886
type(
  'c -> 'd Monad.Checked.t
)
ident(
  int_ref cexpr "ExtendedStatement.ml" 123 3748 3764 "ExtendedStatement.ml" 123 3748 3769
)
"ExtendedStatement.ml" 125 3829 3887 "ExtendedStatement.ml" 125 3829 3891
type(
  'e -> 'b Monad.Checked.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 123 3748 3770 "ExtendedStatement.ml" 123 3748 3774
)
"ExtendedStatement.ml" 125 3829 3892 "ExtendedStatement.ml" 125 3829 3895
type(
  ('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 123 3748 3775 "ExtendedStatement.ml" 123 3748 3778
)
"ExtendedStatement.ml" 125 3829 3896 "ExtendedStatement.ml" 125 3829 3900
type(
  'f
)
ident(
  int_ref stmt "ExtendedStatement.ml" 123 3748 3779 "ExtendedStatement.ml" 123 3748 3783
)
"ExtendedStatement.ml" 125 3829 3831 "ExtendedStatement.ml" 125 3829 3900
call(
  tail
)
type(
  'g Monad.Checked.t
)
"ExtendedStatement.ml" 124 3786 3788 "ExtendedStatement.ml" 125 3829 3900
type(
  'g Monad.Checked.t
)
"ExtendedStatement.ml" 123 3748 3779 "ExtendedStatement.ml" 125 3829 3900
type(
  'f -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 123 3748 3775 "ExtendedStatement.ml" 125 3829 3900
type(
  (('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 123 3748 3770 "ExtendedStatement.ml" 125 3829 3900
type(
  ('e -> 'b Monad.Checked.t) ->
  (('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 123 3748 3764 "ExtendedStatement.ml" 125 3829 3900
type(
  ('c -> 'd Monad.Checked.t) ->
  ('e -> 'b Monad.Checked.t) ->
  (('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 123 3748 3760 "ExtendedStatement.ml" 125 3829 3900
type(
  ('a -> 'b Monad.Checked.t) ->
  ('c -> 'd Monad.Checked.t) ->
  ('e -> 'b Monad.Checked.t) ->
  (('f -> 'g Monad.Checked.t) -> 'f -> 'g Monad.Checked.t) ->
  'f -> 'g Monad.Checked.t
)
"ExtendedStatement.ml" 131 4004 4008 "ExtendedStatement.ml" 131 4004 4017
type(
  < equal : [> `Int ] -> 'a -> bool; .. > ->
  ('b -> ('c * 'a) Monad.Checked.t) ->
  ((([> `Case of
          'b *
          ([< `Atom of 'b | `Interval of 'b * 'b ] list * 'd list) list *
          'd list
      | `For of 'b * 'b * 'b * 'b option * 'd list ]
     as 'd) ->
    ([> `Case of
          ('c * 'a) *
          ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
           'e list)
          list * 'e list
      | `For of
          ('c * 'a) * ('c * 'a) * ('c * 'a) * ('c * 'a) option * 'e list ]
     as 'e)
    Monad.Checked.t) ->
   'd -> 'e Monad.Checked.t) ->
  'd -> 'e Monad.Checked.t
)
ident(
  def typecheck "ExtendedStatement.ml" 161 5214 5250 "ExtendedStatement.ml" 1 0 -1
)
"ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
type(
  < equal : [> `Int ] -> 'a -> bool; .. > as 'f
)
ident(
  def ts "ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 161 5214 5250
)
"ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 131 4004 4025
type(
  'b -> ('c * 'a) Monad.Checked.t
)
ident(
  def expr "ExtendedStatement.ml" 131 4004 4026 "ExtendedStatement.ml" 161 5214 5250
)
"ExtendedStatement.ml" 131 4004 4026 "ExtendedStatement.ml" 131 4004 4029
type(
  ('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t
)
ident(
  def ext "ExtendedStatement.ml" 131 4004 4030 "ExtendedStatement.ml" 161 5214 5250
)
"ExtendedStatement.ml" 131 4004 4030 "ExtendedStatement.ml" 131 4004 4034
type(
  'd
)
ident(
  def stmt "ExtendedStatement.ml" 132 4037 4039 "ExtendedStatement.ml" 161 5214 5250
)
"ExtendedStatement.ml" 132 4037 4039 "ExtendedStatement.ml" 132 4037 4043
type(
  < case : 'd ->
           'c * 'a ->
           ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
            'e list)
           list -> 'e list -> 'e Monad.Checked.t;
    forc : 'd ->
           'c * 'a ->
           'c * 'a ->
           'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t > ->
  ('b -> ('c * 'a) Monad.Checked.t) ->
  ('b -> ('c * 'a) Monad.Checked.t) ->
  ('b -> ('c * 'a) Monad.Checked.t) ->
  (('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t) ->
  'd -> 'e Monad.Checked.t
)
ident(
  int_ref cmap "ExtendedStatement.ml" 46 1368 1372 "ExtendedStatement.ml" 46 1368 1376
)
"ExtendedStatement.ml" 133 4052 4074 "ExtendedStatement.ml" 133 4052 4075
type(
  'd
)
"ExtendedStatement.ml" 133 4052 4078 "ExtendedStatement.ml" 133 4052 4079
type(
  'c
)
ident(
  def i "ExtendedStatement.ml" 133 4052 4092 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4081 "ExtendedStatement.ml" 133 4052 4083
type(
  'a
)
ident(
  def it "ExtendedStatement.ml" 133 4052 4092 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4078 "ExtendedStatement.ml" 133 4052 4083
type(
  'c * 'a
)
"ExtendedStatement.ml" 133 4052 4077 "ExtendedStatement.ml" 133 4052 4090
type(
  'c * 'a
)
ident(
  def i' "ExtendedStatement.ml" 133 4052 4092 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4094 "ExtendedStatement.ml" 133 4052 4095
type(
  'c
)
ident(
  def l "ExtendedStatement.ml" 133 4052 4108 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4097 "ExtendedStatement.ml" 133 4052 4099
type(
  'a
)
ident(
  def lt "ExtendedStatement.ml" 133 4052 4108 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4094 "ExtendedStatement.ml" 133 4052 4099
type(
  'c * 'a
)
"ExtendedStatement.ml" 133 4052 4093 "ExtendedStatement.ml" 133 4052 4106
type(
  'c * 'a
)
ident(
  def l' "ExtendedStatement.ml" 133 4052 4108 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4110 "ExtendedStatement.ml" 133 4052 4111
type(
  'c
)
ident(
  def u "ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4113 "ExtendedStatement.ml" 133 4052 4115
type(
  'a
)
ident(
  def ut "ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4110 "ExtendedStatement.ml" 133 4052 4115
type(
  'c * 'a
)
"ExtendedStatement.ml" 133 4052 4109 "ExtendedStatement.ml" 133 4052 4122
type(
  'c * 'a
)
ident(
  def u' "ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 133 4052 4125
type(
  ('c * 'a) option
)
ident(
  def s "ExtendedStatement.ml" 133 4052 4126 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 133 4052 4126 "ExtendedStatement.ml" 133 4052 4127
type(
  'e list
)
ident(
  def b "ExtendedStatement.ml" 134 4130 4142 "ExtendedStatement.ml" 140 4399 4445
)
"ExtendedStatement.ml" 134 4130 4142 "ExtendedStatement.ml" 134 4130 4147
type(
  (('c * (_[> `Int ] as 'g)) list, Ostap.Msg.t) Checked.t *
  (unit, Ostap.Msg.t) Checked.t ->
  (('c * 'g) list * unit, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.tuple
)
"ExtendedStatement.ml" 135 4150 4168 "ExtendedStatement.ml" 135 4150 4178
type(
  'f -> 'c -> 'a -> 'g -> ('c * 'g, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 135 4150 4179 "ExtendedStatement.ml" 135 4150 4181
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 135 4150 4182 "ExtendedStatement.ml" 135 4150 4183
type(
  'c
)
ident(
  int_ref i "ExtendedStatement.ml" 133 4052 4078 "ExtendedStatement.ml" 133 4052 4079
)
"ExtendedStatement.ml" 135 4150 4184 "ExtendedStatement.ml" 135 4150 4186
type(
  'a
)
ident(
  int_ref it "ExtendedStatement.ml" 133 4052 4081 "ExtendedStatement.ml" 133 4052 4083
)
"ExtendedStatement.ml" 135 4150 4187 "ExtendedStatement.ml" 135 4150 4191
type(
  'g
)
"ExtendedStatement.ml" 135 4150 4168 "ExtendedStatement.ml" 135 4150 4191
call(
  stack
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 135 4150 4193 "ExtendedStatement.ml" 135 4150 4203
type(
  'f -> 'c -> 'a -> 'g -> ('c * 'g, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 135 4150 4204 "ExtendedStatement.ml" 135 4150 4206
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 135 4150 4207 "ExtendedStatement.ml" 135 4150 4208
type(
  'c
)
ident(
  int_ref l "ExtendedStatement.ml" 133 4052 4094 "ExtendedStatement.ml" 133 4052 4095
)
"ExtendedStatement.ml" 135 4150 4209 "ExtendedStatement.ml" 135 4150 4211
type(
  'a
)
ident(
  int_ref lt "ExtendedStatement.ml" 133 4052 4097 "ExtendedStatement.ml" 133 4052 4099
)
"ExtendedStatement.ml" 135 4150 4212 "ExtendedStatement.ml" 135 4150 4216
type(
  'g
)
"ExtendedStatement.ml" 135 4150 4193 "ExtendedStatement.ml" 135 4150 4216
call(
  stack
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 135 4150 4218 "ExtendedStatement.ml" 135 4150 4228
type(
  'f -> 'c -> 'a -> 'g -> ('c * 'g, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 135 4150 4229 "ExtendedStatement.ml" 135 4150 4231
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 135 4150 4232 "ExtendedStatement.ml" 135 4150 4233
type(
  'c
)
ident(
  int_ref u "ExtendedStatement.ml" 133 4052 4110 "ExtendedStatement.ml" 133 4052 4111
)
"ExtendedStatement.ml" 135 4150 4234 "ExtendedStatement.ml" 135 4150 4236
type(
  'a
)
ident(
  int_ref ut "ExtendedStatement.ml" 133 4052 4113 "ExtendedStatement.ml" 133 4052 4115
)
"ExtendedStatement.ml" 135 4150 4237 "ExtendedStatement.ml" 135 4150 4241
type(
  'g
)
"ExtendedStatement.ml" 135 4150 4218 "ExtendedStatement.ml" 135 4150 4241
call(
  stack
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 135 4150 4167 "ExtendedStatement.ml" 135 4150 4242
type(
  ('c * 'g, Ostap.Msg.t) Checked.t list
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t list
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t list
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t list
)
"ExtendedStatement.ml" 135 4150 4164 "ExtendedStatement.ml" 135 4150 4242
call(
  stack
)
type(
  (('c * 'g) list, Ostap.Msg.t) Checked.t
)
type(
  ('c * 'g, Ostap.Msg.t) Checked.t list ->
  (('c * 'g) list, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( ?| )
)
"ExtendedStatement.ml" 136 4245 4265 "ExtendedStatement.ml" 136 4245 4266
type(
  ('c * 'a) option
)
ident(
  int_ref s "ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 133 4052 4125
)
"ExtendedStatement.ml" 137 4273 4289 "ExtendedStatement.ml" 137 4273 4293
type(
  ('c * 'a) option
)
"ExtendedStatement.ml" 137 4273 4300 "ExtendedStatement.ml" 137 4273 4302
type(
  unit
)
"ExtendedStatement.ml" 137 4273 4297 "ExtendedStatement.ml" 137 4273 4302
call(
  stack
)
type(
  (unit, Ostap.Msg.t) Checked.t
)
type(
  unit -> (unit, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( !! )
)
"ExtendedStatement.ml" 138 4304 4326 "ExtendedStatement.ml" 138 4304 4327
type(
  'c
)
ident(
  def s "ExtendedStatement.ml" 138 4304 4336 "ExtendedStatement.ml" 138 4304 4378
)
"ExtendedStatement.ml" 138 4304 4329 "ExtendedStatement.ml" 138 4304 4331
type(
  'a
)
ident(
  def st "ExtendedStatement.ml" 138 4304 4336 "ExtendedStatement.ml" 138 4304 4378
)
"ExtendedStatement.ml" 138 4304 4326 "ExtendedStatement.ml" 138 4304 4331
type(
  'c * 'a
)
"ExtendedStatement.ml" 138 4304 4320 "ExtendedStatement.ml" 138 4304 4332
type(
  ('c * 'a) option
)
"ExtendedStatement.ml" 138 4304 4336 "ExtendedStatement.ml" 138 4304 4346
type(
  'f -> 'c -> 'a -> (_[> `Int ] as 'h) -> ('c * 'h, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 138 4304 4347 "ExtendedStatement.ml" 138 4304 4349
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 138 4304 4350 "ExtendedStatement.ml" 138 4304 4351
type(
  'c
)
ident(
  int_ref s "ExtendedStatement.ml" 138 4304 4326 "ExtendedStatement.ml" 138 4304 4327
)
"ExtendedStatement.ml" 138 4304 4352 "ExtendedStatement.ml" 138 4304 4354
type(
  'a
)
ident(
  int_ref st "ExtendedStatement.ml" 138 4304 4329 "ExtendedStatement.ml" 138 4304 4331
)
"ExtendedStatement.ml" 138 4304 4355 "ExtendedStatement.ml" 138 4304 4359
type(
  'h
)
"ExtendedStatement.ml" 138 4304 4336 "ExtendedStatement.ml" 138 4304 4359
call(
  stack
)
type(
  ('c * 'h, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 138 4304 4370 "ExtendedStatement.ml" 138 4304 4371
type(
  'c * 'h
)
"ExtendedStatement.ml" 138 4304 4375 "ExtendedStatement.ml" 138 4304 4377
type(
  unit
)
"ExtendedStatement.ml" 138 4304 4365 "ExtendedStatement.ml" 138 4304 4378
type(
  'c * 'h -> unit
)
"ExtendedStatement.ml" 138 4304 4336 "ExtendedStatement.ml" 138 4304 4378
call(
  stack
)
type(
  (unit, Ostap.Msg.t) Checked.t
)
type(
  ('c * 'h, Ostap.Msg.t) Checked.t ->
  ('c * 'h -> unit) -> (unit, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 136 4245 4259 "ExtendedStatement.ml" 138 4304 4378
type(
  (unit, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 134 4130 4148 "ExtendedStatement.ml" 139 4379 4392
type(
  (('c * 'g) list, Ostap.Msg.t) Checked.t * (unit, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 134 4130 4142 "ExtendedStatement.ml" 139 4379 4392
call(
  stack
)
type(
  (('c * 'g) list * unit, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 140 4399 4416 "ExtendedStatement.ml" 140 4399 4417
type(
  ('c * 'g) list * unit
)
"ExtendedStatement.ml" 140 4399 4427 "ExtendedStatement.ml" 140 4399 4429
type(
  'c * 'a
)
ident(
  int_ref i' "ExtendedStatement.ml" 133 4052 4077 "ExtendedStatement.ml" 133 4052 4090
)
"ExtendedStatement.ml" 140 4399 4431 "ExtendedStatement.ml" 140 4399 4433
type(
  'c * 'a
)
ident(
  int_ref l' "ExtendedStatement.ml" 133 4052 4093 "ExtendedStatement.ml" 133 4052 4106
)
"ExtendedStatement.ml" 140 4399 4435 "ExtendedStatement.ml" 140 4399 4437
type(
  'c * 'a
)
ident(
  int_ref u' "ExtendedStatement.ml" 133 4052 4109 "ExtendedStatement.ml" 133 4052 4122
)
"ExtendedStatement.ml" 140 4399 4439 "ExtendedStatement.ml" 140 4399 4440
type(
  ('c * 'a) option
)
ident(
  int_ref s "ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 133 4052 4125
)
"ExtendedStatement.ml" 140 4399 4442 "ExtendedStatement.ml" 140 4399 4443
type(
  'e list
)
ident(
  int_ref b "ExtendedStatement.ml" 133 4052 4126 "ExtendedStatement.ml" 133 4052 4127
)
"ExtendedStatement.ml" 140 4399 4426 "ExtendedStatement.ml" 140 4399 4444
type(
  ('c * 'a) * ('c * 'a) * ('c * 'a) * ('c * 'a) option * 'e list
)
"ExtendedStatement.ml" 140 4399 4421 "ExtendedStatement.ml" 140 4399 4444
type(
  'e
)
"ExtendedStatement.ml" 140 4399 4411 "ExtendedStatement.ml" 140 4399 4445
type(
  ('c * 'g) list * unit -> 'e
)
"ExtendedStatement.ml" 134 4130 4142 "ExtendedStatement.ml" 140 4399 4445
call(
  tail
)
type(
  'e Monad.Checked.t
)
type(
  (('c * 'g) list * unit, Ostap.Msg.t) Checked.t ->
  (('c * 'g) list * unit -> 'e) -> 'e Monad.Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 133 4052 4126 "ExtendedStatement.ml" 140 4399 4445
type(
  'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4124 "ExtendedStatement.ml" 140 4399 4445
type(
  ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4108 "ExtendedStatement.ml" 140 4399 4445
type(
  'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4092 "ExtendedStatement.ml" 140 4399 4445
type(
  'c * 'a -> 'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4076 "ExtendedStatement.ml" 140 4399 4445
type(
  'c * 'a ->
  'c * 'a -> 'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4074 "ExtendedStatement.ml" 140 4399 4445
type(
  'd ->
  'c * 'a ->
  'c * 'a -> 'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
type(
  'd ->
  'c * 'a ->
  'c * 'a -> 'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 133 4052 4062 "ExtendedStatement.ml" 140 4399 4445
type(
  < case : 'd ->
           'c * 'a ->
           ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
            'e list)
           list -> 'e list -> 'e Monad.Checked.t;
    forc : 'd ->
           'c * 'a ->
           'c * 'a ->
           'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t > ->
  'd ->
  'c * 'a ->
  'c * 'a -> 'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 141 4446 4468 "ExtendedStatement.ml" 141 4446 4469
type(
  'd
)
"ExtendedStatement.ml" 141 4446 4472 "ExtendedStatement.ml" 141 4446 4473
type(
  'c
)
ident(
  def e "ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 160 5167 5213
)
"ExtendedStatement.ml" 141 4446 4475 "ExtendedStatement.ml" 141 4446 4477
type(
  'a
)
ident(
  def et "ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 160 5167 5213
)
"ExtendedStatement.ml" 141 4446 4472 "ExtendedStatement.ml" 141 4446 4477
type(
  'c * 'a
)
"ExtendedStatement.ml" 141 4446 4471 "ExtendedStatement.ml" 141 4446 4484
type(
  'c * 'a
)
ident(
  def e' "ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 160 5167 5213
)
"ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 141 4446 4487
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list
)
ident(
  def b "ExtendedStatement.ml" 141 4446 4488 "ExtendedStatement.ml" 160 5167 5213
)
"ExtendedStatement.ml" 141 4446 4488 "ExtendedStatement.ml" 141 4446 4489
type(
  'e list
)
ident(
  def s "ExtendedStatement.ml" 142 4492 4504 "ExtendedStatement.ml" 160 5167 5213
)
"ExtendedStatement.ml" 142 4492 4504 "ExtendedStatement.ml" 142 4492 4509
type(
  ((unit list * 'e list) list, Ostap.Msg.t) Checked.t *
  ('c * (_[> `Int ] as 'i), Ostap.Msg.t) Checked.t ->
  ((unit list * 'e list) list * ('c * 'i), Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.tuple
)
"ExtendedStatement.ml" 143 4512 4526 "ExtendedStatement.ml" 143 4512 4530
type(
  (unit list * 'e list, Ostap.Msg.t) Checked.t list ->
  ((unit list * 'e list) list, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.list
)
"ExtendedStatement.ml" 144 4531 4548 "ExtendedStatement.ml" 144 4531 4556
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list ->
   (unit list * 'e list, Ostap.Msg.t) Checked.t) ->
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> (unit list * 'e list, Ostap.Msg.t) Checked.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 145 4558 4582 "ExtendedStatement.ml" 145 4558 4583
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list
)
ident(
  def c "ExtendedStatement.ml" 146 4592 4613 "ExtendedStatement.ml" 155 5022 5067
)
"ExtendedStatement.ml" 145 4558 4585 "ExtendedStatement.ml" 145 4558 4586
type(
  'e list
)
ident(
  def s "ExtendedStatement.ml" 146 4592 4613 "ExtendedStatement.ml" 155 5022 5067
)
"ExtendedStatement.ml" 145 4558 4582 "ExtendedStatement.ml" 145 4558 4586
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list
)
"ExtendedStatement.ml" 146 4592 4613 "ExtendedStatement.ml" 146 4592 4617
type(
  (unit, Ostap.Msg.t) Checked.t list -> (unit list, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.list
)
"ExtendedStatement.ml" 147 4619 4643 "ExtendedStatement.ml" 147 4619 4651
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] ->
   (unit, Ostap.Msg.t) Checked.t) ->
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list ->
  (unit, Ostap.Msg.t) Checked.t list
)
ident(
  ext_ref List.map
)
"ExtendedStatement.ml" 149 4690 4726 "ExtendedStatement.ml" 149 4690 4727
type(
  'c
)
ident(
  def c "ExtendedStatement.ml" 149 4690 4735 "ExtendedStatement.ml" 149 4690 4769
)
"ExtendedStatement.ml" 149 4690 4729 "ExtendedStatement.ml" 149 4690 4730
type(
  'a
)
ident(
  def t "ExtendedStatement.ml" 149 4690 4735 "ExtendedStatement.ml" 149 4690 4769
)
"ExtendedStatement.ml" 149 4690 4726 "ExtendedStatement.ml" 149 4690 4730
type(
  'c * 'a
)
"ExtendedStatement.ml" 149 4690 4719 "ExtendedStatement.ml" 149 4690 4731
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ]
)
"ExtendedStatement.ml" 149 4690 4735 "ExtendedStatement.ml" 149 4690 4745
type(
  'f -> 'c -> 'a -> (_[> `Int ] as 'j) -> ('c * 'j, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 149 4690 4746 "ExtendedStatement.ml" 149 4690 4748
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 149 4690 4749 "ExtendedStatement.ml" 149 4690 4750
type(
  'c
)
ident(
  int_ref c "ExtendedStatement.ml" 149 4690 4726 "ExtendedStatement.ml" 149 4690 4727
)
"ExtendedStatement.ml" 149 4690 4751 "ExtendedStatement.ml" 149 4690 4752
type(
  'a
)
ident(
  int_ref t "ExtendedStatement.ml" 149 4690 4729 "ExtendedStatement.ml" 149 4690 4730
)
"ExtendedStatement.ml" 149 4690 4753 "ExtendedStatement.ml" 149 4690 4757
type(
  'j
)
"ExtendedStatement.ml" 149 4690 4735 "ExtendedStatement.ml" 149 4690 4757
call(
  stack
)
type(
  ('c * 'j, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 149 4690 4763 "ExtendedStatement.ml" 149 4690 4769
type(
  'c * 'j -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"ExtendedStatement.ml" 149 4690 4735 "ExtendedStatement.ml" 149 4690 4769
call(
  tail
)
type(
  (unit, Ostap.Msg.t) Checked.t
)
type(
  ('c * 'j, Ostap.Msg.t) Checked.t ->
  ('c * 'j -> unit) -> (unit, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 150 4770 4811 "ExtendedStatement.ml" 150 4770 4812
type(
  'c
)
ident(
  def x "ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 152 4927 4964
)
"ExtendedStatement.ml" 150 4770 4814 "ExtendedStatement.ml" 150 4770 4816
type(
  'a
)
ident(
  def tx "ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 152 4927 4964
)
"ExtendedStatement.ml" 150 4770 4811 "ExtendedStatement.ml" 150 4770 4816
type(
  'c * 'a
)
"ExtendedStatement.ml" 150 4770 4820 "ExtendedStatement.ml" 150 4770 4821
type(
  'c
)
ident(
  def y "ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 152 4927 4964
)
"ExtendedStatement.ml" 150 4770 4823 "ExtendedStatement.ml" 150 4770 4825
type(
  'a
)
ident(
  def ty "ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 152 4927 4964
)
"ExtendedStatement.ml" 150 4770 4820 "ExtendedStatement.ml" 150 4770 4825
type(
  'c * 'a
)
"ExtendedStatement.ml" 150 4770 4810 "ExtendedStatement.ml" 150 4770 4826
type(
  ('c * 'a) * ('c * 'a)
)
"ExtendedStatement.ml" 150 4770 4799 "ExtendedStatement.ml" 150 4770 4827
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ]
)
"ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 151 4833 4869
type(
  ('c * (_[> `Int ] as 'k), Ostap.Msg.t) Checked.t *
  ('c * (_[> `Int ] as 'l), Ostap.Msg.t) Checked.t ->
  (('c * 'k) * ('c * 'l), Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.tuple
)
"ExtendedStatement.ml" 151 4833 4871 "ExtendedStatement.ml" 151 4833 4881
type(
  'f -> 'c -> 'a -> 'k -> ('c * 'k, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 151 4833 4882 "ExtendedStatement.ml" 151 4833 4884
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 151 4833 4885 "ExtendedStatement.ml" 151 4833 4886
type(
  'c
)
ident(
  int_ref x "ExtendedStatement.ml" 150 4770 4811 "ExtendedStatement.ml" 150 4770 4812
)
"ExtendedStatement.ml" 151 4833 4887 "ExtendedStatement.ml" 151 4833 4889
type(
  'a
)
ident(
  int_ref tx "ExtendedStatement.ml" 150 4770 4814 "ExtendedStatement.ml" 150 4770 4816
)
"ExtendedStatement.ml" 151 4833 4890 "ExtendedStatement.ml" 151 4833 4894
type(
  'k
)
"ExtendedStatement.ml" 151 4833 4871 "ExtendedStatement.ml" 151 4833 4894
call(
  stack
)
type(
  ('c * 'k, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 151 4833 4896 "ExtendedStatement.ml" 151 4833 4906
type(
  'f -> 'c -> 'a -> 'l -> ('c * 'l, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 151 4833 4907 "ExtendedStatement.ml" 151 4833 4909
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 151 4833 4910 "ExtendedStatement.ml" 151 4833 4911
type(
  'c
)
ident(
  int_ref y "ExtendedStatement.ml" 150 4770 4820 "ExtendedStatement.ml" 150 4770 4821
)
"ExtendedStatement.ml" 151 4833 4912 "ExtendedStatement.ml" 151 4833 4914
type(
  'a
)
ident(
  int_ref ty "ExtendedStatement.ml" 150 4770 4823 "ExtendedStatement.ml" 150 4770 4825
)
"ExtendedStatement.ml" 151 4833 4915 "ExtendedStatement.ml" 151 4833 4919
type(
  'l
)
"ExtendedStatement.ml" 151 4833 4896 "ExtendedStatement.ml" 151 4833 4919
call(
  stack
)
type(
  ('c * 'l, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 151 4833 4870 "ExtendedStatement.ml" 151 4833 4920
type(
  ('c * 'k, Ostap.Msg.t) Checked.t * ('c * 'l, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 151 4833 4920
call(
  stack
)
type(
  (('c * 'k) * ('c * 'l), Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 152 4927 4958 "ExtendedStatement.ml" 152 4927 4964
type(
  ('c * 'k) * ('c * 'l) -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"ExtendedStatement.ml" 151 4833 4864 "ExtendedStatement.ml" 152 4927 4964
call(
  tail
)
type(
  (unit, Ostap.Msg.t) Checked.t
)
type(
  (('c * 'k) * ('c * 'l), Ostap.Msg.t) Checked.t ->
  (('c * 'k) * ('c * 'l) -> unit) -> (unit, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 148 4653 4679 "ExtendedStatement.ml" 153 4965 4992
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] ->
  (unit, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 154 4993 5019 "ExtendedStatement.ml" 154 4993 5020
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list
)
ident(
  int_ref c "ExtendedStatement.ml" 145 4558 4582 "ExtendedStatement.ml" 145 4558 4583
)
"ExtendedStatement.ml" 147 4619 4642 "ExtendedStatement.ml" 155 5022 5046
call(
  stack
)
type(
  (unit, Ostap.Msg.t) Checked.t list
)
"ExtendedStatement.ml" 146 4592 4613 "ExtendedStatement.ml" 155 5022 5046
call(
  stack
)
type(
  (unit list, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 155 5022 5057 "ExtendedStatement.ml" 155 5022 5058
type(
  unit list
)
ident(
  def c "ExtendedStatement.ml" 155 5022 5062 "ExtendedStatement.ml" 155 5022 5066
)
"ExtendedStatement.ml" 155 5022 5062 "ExtendedStatement.ml" 155 5022 5063
type(
  unit list
)
ident(
  int_ref c "ExtendedStatement.ml" 155 5022 5057 "ExtendedStatement.ml" 155 5022 5058
)
"ExtendedStatement.ml" 155 5022 5065 "ExtendedStatement.ml" 155 5022 5066
type(
  'e list
)
ident(
  int_ref s "ExtendedStatement.ml" 145 4558 4585 "ExtendedStatement.ml" 145 4558 4586
)
"ExtendedStatement.ml" 155 5022 5062 "ExtendedStatement.ml" 155 5022 5066
type(
  unit list * 'e list
)
"ExtendedStatement.ml" 155 5022 5052 "ExtendedStatement.ml" 155 5022 5067
type(
  unit list -> unit list * 'e list
)
"ExtendedStatement.ml" 146 4592 4613 "ExtendedStatement.ml" 155 5022 5067
call(
  tail
)
type(
  (unit list * 'e list, Ostap.Msg.t) Checked.t
)
type(
  (unit list, Ostap.Msg.t) Checked.t ->
  (unit list -> unit list * 'e list) ->
  (unit list * 'e list, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 145 4558 4576 "ExtendedStatement.ml" 156 5068 5087
type(
  [ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list ->
  (unit list * 'e list, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 157 5088 5106 "ExtendedStatement.ml" 157 5088 5107
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list
)
ident(
  int_ref b "ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 141 4446 4487
)
"ExtendedStatement.ml" 144 4531 4547 "ExtendedStatement.ml" 158 5108 5125
call(
  stack
)
type(
  (unit list * 'e list, Ostap.Msg.t) Checked.t list
)
"ExtendedStatement.ml" 143 4512 4526 "ExtendedStatement.ml" 158 5108 5125
call(
  stack
)
type(
  ((unit list * 'e list) list, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 159 5127 5143 "ExtendedStatement.ml" 159 5127 5153
type(
  'f -> 'c -> 'a -> 'i -> ('c * 'i, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Common.int
)
"ExtendedStatement.ml" 159 5127 5154 "ExtendedStatement.ml" 159 5127 5156
type(
  'f
)
ident(
  int_ref ts "ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 131 4004 4020
)
"ExtendedStatement.ml" 159 5127 5157 "ExtendedStatement.ml" 159 5127 5158
type(
  'c
)
ident(
  int_ref e "ExtendedStatement.ml" 141 4446 4472 "ExtendedStatement.ml" 141 4446 4473
)
"ExtendedStatement.ml" 159 5127 5159 "ExtendedStatement.ml" 159 5127 5161
type(
  'a
)
ident(
  int_ref et "ExtendedStatement.ml" 141 4446 4475 "ExtendedStatement.ml" 141 4446 4477
)
"ExtendedStatement.ml" 159 5127 5162 "ExtendedStatement.ml" 159 5127 5166
type(
  'i
)
"ExtendedStatement.ml" 159 5127 5143 "ExtendedStatement.ml" 159 5127 5166
call(
  stack
)
type(
  ('c * 'i, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 142 4492 4510 "ExtendedStatement.ml" 160 5167 5180
type(
  ((unit list * 'e list) list, Ostap.Msg.t) Checked.t *
  ('c * 'i, Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 142 4492 4504 "ExtendedStatement.ml" 160 5167 5180
call(
  stack
)
type(
  ((unit list * 'e list) list * ('c * 'i), Ostap.Msg.t) Checked.t
)
"ExtendedStatement.ml" 160 5167 5191 "ExtendedStatement.ml" 160 5167 5192
type(
  (unit list * 'e list) list * ('c * 'i)
)
"ExtendedStatement.ml" 160 5167 5203 "ExtendedStatement.ml" 160 5167 5205
type(
  'c * 'a
)
ident(
  int_ref e' "ExtendedStatement.ml" 141 4446 4471 "ExtendedStatement.ml" 141 4446 4484
)
"ExtendedStatement.ml" 160 5167 5207 "ExtendedStatement.ml" 160 5167 5208
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list
)
ident(
  int_ref b "ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 141 4446 4487
)
"ExtendedStatement.ml" 160 5167 5210 "ExtendedStatement.ml" 160 5167 5211
type(
  'e list
)
ident(
  int_ref s "ExtendedStatement.ml" 141 4446 4488 "ExtendedStatement.ml" 141 4446 4489
)
"ExtendedStatement.ml" 160 5167 5202 "ExtendedStatement.ml" 160 5167 5212
type(
  ('c * 'a) *
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list * 'e list
)
"ExtendedStatement.ml" 160 5167 5196 "ExtendedStatement.ml" 160 5167 5212
type(
  'e
)
"ExtendedStatement.ml" 160 5167 5186 "ExtendedStatement.ml" 160 5167 5213
type(
  (unit list * 'e list) list * ('c * 'i) -> 'e
)
"ExtendedStatement.ml" 142 4492 4504 "ExtendedStatement.ml" 160 5167 5213
call(
  tail
)
type(
  'e Monad.Checked.t
)
type(
  ((unit list * 'e list) list * ('c * 'i), Ostap.Msg.t) Checked.t ->
  ((unit list * 'e list) list * ('c * 'i) -> 'e) -> 'e Monad.Checked.t
)
ident(
  ext_ref Checked.( -?-> )
)
"ExtendedStatement.ml" 141 4446 4488 "ExtendedStatement.ml" 160 5167 5213
type(
  'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 141 4446 4486 "ExtendedStatement.ml" 160 5167 5213
type(
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 141 4446 4470 "ExtendedStatement.ml" 160 5167 5213
type(
  'c * 'a ->
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 141 4446 4468 "ExtendedStatement.ml" 160 5167 5213
type(
  'd ->
  'c * 'a ->
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> 'e list -> 'e Monad.Checked.t
)
type(
  'd ->
  'c * 'a ->
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 141 4446 4456 "ExtendedStatement.ml" 160 5167 5213
type(
  < case : 'd ->
           'c * 'a ->
           ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
            'e list)
           list -> 'e list -> 'e Monad.Checked.t;
    forc : 'd ->
           'c * 'a ->
           'c * 'a ->
           'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t > ->
  'd ->
  'c * 'a ->
  ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list * 'e list)
  list -> 'e list -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 132 4037 4044 "ExtendedStatement.ml" 161 5214 5226
type(
  < case : 'd ->
           'c * 'a ->
           ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
            'e list)
           list -> 'e list -> 'e Monad.Checked.t;
    forc : 'd ->
           'c * 'a ->
           'c * 'a ->
           'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t >
)
type(
  < case : 'd ->
           'c * 'a ->
           ([ `Atom of 'c * 'a | `Interval of ('c * 'a) * ('c * 'a) ] list *
            'e list)
           list -> 'e list -> 'e Monad.Checked.t;
    forc : 'd ->
           'c * 'a ->
           'c * 'a ->
           'c * 'a -> ('c * 'a) option -> 'e list -> 'e Monad.Checked.t >
)
"ExtendedStatement.ml" 161 5214 5227 "ExtendedStatement.ml" 161 5214 5231
type(
  'b -> ('c * 'a) Monad.Checked.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 131 4004 4025
)
"ExtendedStatement.ml" 161 5214 5232 "ExtendedStatement.ml" 161 5214 5236
type(
  'b -> ('c * 'a) Monad.Checked.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 131 4004 4025
)
"ExtendedStatement.ml" 161 5214 5237 "ExtendedStatement.ml" 161 5214 5241
type(
  'b -> ('c * 'a) Monad.Checked.t
)
ident(
  int_ref expr "ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 131 4004 4025
)
"ExtendedStatement.ml" 161 5214 5242 "ExtendedStatement.ml" 161 5214 5245
type(
  ('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t
)
ident(
  int_ref ext "ExtendedStatement.ml" 131 4004 4026 "ExtendedStatement.ml" 131 4004 4029
)
"ExtendedStatement.ml" 161 5214 5246 "ExtendedStatement.ml" 161 5214 5250
type(
  'd
)
ident(
  int_ref stmt "ExtendedStatement.ml" 131 4004 4030 "ExtendedStatement.ml" 131 4004 4034
)
"ExtendedStatement.ml" 132 4037 4039 "ExtendedStatement.ml" 161 5214 5250
call(
  tail
)
type(
  'e Monad.Checked.t
)
"ExtendedStatement.ml" 131 4004 4030 "ExtendedStatement.ml" 161 5214 5250
type(
  'd -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 131 4004 4026 "ExtendedStatement.ml" 161 5214 5250
type(
  (('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t) ->
  'd -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 131 4004 4021 "ExtendedStatement.ml" 161 5214 5250
type(
  ('b -> ('c * 'a) Monad.Checked.t) ->
  (('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t) ->
  'd -> 'e Monad.Checked.t
)
"ExtendedStatement.ml" 131 4004 4018 "ExtendedStatement.ml" 161 5214 5250
type(
  'f ->
  ('b -> ('c * 'a) Monad.Checked.t) ->
  (('d -> 'e Monad.Checked.t) -> 'd -> 'e Monad.Checked.t) ->
  'd -> 'e Monad.Checked.t
)
